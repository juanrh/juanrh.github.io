digraph G
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{moa.gui.BatchCmd\n|+ useMicroGT\l- clusterEvents\l- clusterer\l- stream\l- measures\l- totalInstances\l|+ BatchCmd()\l+ run()\l+ changeCluster()\l+ main()\l+ runBatch()\l+ exportCSV()\l- getEventList()\l- getMeasureSelection()\l- getMeasures()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node2 [label="{moa.streams.clustering.ClusterEventListener\n||+ changeCluster()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfacemoa_1_1streams_1_1clustering_1_1ClusterEventListener.html"];
  Node3 -> Node2 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node3 [label="{EventListener\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node4 -> Node1 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="measures",arrowtail="open",fontname="Helvetica"];
  Node4 [label="{moa.evaluation.MeasureCollection\n|- names\l- values\l- sortedValues\l- events\l- minValue\l- maxValue\l- sumValues\l- enabled\l- corrupted\l- time\l- debug\l- mm\l- map\l- numMeasures\l|+ MeasureCollection()\l+ addValue()\l+ addEmptyValue()\l+ getNumMeasures()\l+ getName()\l+ getMaxValue()\l+ getMinValue()\l+ getLastValue()\l+ getMean()\l+ clean()\l+ getMedian()\l+ getLowerQuartile()\l+ getUpperQuartile()\l+ getNumberOfValues()\l+ getValue()\l+ getAllValues()\l+ setEnabled()\l+ isEnabled()\l+ getMeanRunningTime()\l+ evaluateClusteringPerformance()\l+ getDescription()\l+ addEventType()\l+ getEventType()\l# getNames()\l# addValue()\l# getDefaultEnabled()\l# evaluateClustering()\l- updateSortedValues()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1evaluation_1_1MeasureCollection.html"];
  Node5 -> Node4 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node5 [label="{moa.AbstractMOAObject\n||+ copy()\l+ measureByteSize()\l+ toString()\l+ copy()\l+ measureByteSize()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1AbstractMOAObject.html",tooltip="Abstract MOA Object."];
  Node6 -> Node5 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node6 [label="{moa.MOAObject\n||+ measureByteSize()\l+ copy()\l+ getDescription()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfacemoa_1_1MOAObject.html",tooltip="Interface implemented by classes in MOA, so that all are serializable, can produce..."];
  Node7 -> Node6 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node7 [label="{Serializable\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node8 -> Node4 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="mm",arrowtail="open",fontname="Helvetica"];
  Node8 [label="{moa.evaluation.MembershipMatrix\n|~ classmap\l~ cluster_class_weights\l~ cluster_sums\l~ class_sums\l~ total_entries\l~ class_distribution\l~ total_class_entries\l~ initalBuildTimestamp\l|+ MembershipMatrix()\l+ getClusterClassWeight()\l+ getClusterSum()\l+ getClassSum()\l+ getClassDistribution()\l+ getClusterClassWeightByLabel()\l+ getClassSumByLabel()\l+ getClassDistributionByLabel()\l+ getTotalEntries()\l+ getNumClasses()\l+ hasNoiseClass()\l+ toString()\l+ getInitalBuildTimestamp()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1evaluation_1_1MembershipMatrix.html"];
  Node9 -> Node8 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="classmap",arrowtail="open",fontname="Helvetica"];
  Node9 [label="{HashMap\< Integer, Integer \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node10 -> Node4 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="values\nsortedValues",arrowtail="open",fontname="Helvetica"];
  Node10 [label="{ArrayList\< Double \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node11 -> Node4 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="events",arrowtail="open",fontname="Helvetica"];
  Node11 [label="{ArrayList\< String \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node12 -> Node4 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="map",arrowtail="open",fontname="Helvetica"];
  Node12 [label="{HashMap\< String, Integer \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node13 -> Node1 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="stream",arrowtail="open",fontname="Helvetica"];
  Node13 [label="{moa.streams.clustering.ClusteringStream\n|+ decayHorizonOption\l+ decayThresholdOption\l+ evaluationFrequencyOption\l+ numAttsOption\l|+ getDecayHorizon()\l+ getDecayThreshold()\l+ getEvaluationFrequency()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1streams_1_1clustering_1_1ClusteringStream.html"];
  Node14 -> Node13 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node14 [label="{moa.options.AbstractOptionHandler\n|# options\l# classOptionNamesToPreparedObjects\l- serialVersionUID\l|+ getPurposeString()\l+ getOptions()\l+ prepareForUse()\l+ prepareForUse()\l+ getCLICreationString()\l+ copy()\l# prepareForUseImpl()\l# discoverOptionsViaReflection()\l# prepareClassOptions()\l# getPreparedClassOption()\l# getPreparedClassOption()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1options_1_1AbstractOptionHandler.html",tooltip="Abstract Option Handler."];
  Node5 -> Node14 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node15 -> Node14 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node15 [label="{moa.options.OptionHandler\n||+ getPurposeString()\l+ getOptions()\l+ prepareForUse()\l+ prepareForUse()\l+ copy()\l+ getCLICreationString()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfacemoa_1_1options_1_1OptionHandler.html",tooltip="Interface representing an object that handles options or parameters."];
  Node6 -> Node15 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node16 -> Node14 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="classOptionNamesToPreparedObjects",arrowtail="open",fontname="Helvetica"];
  Node16 [label="{Map\< String, Object \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node17 -> Node14 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="options",arrowtail="open",fontname="Helvetica"];
  Node17 [label="{moa.options.Options\n|# optionList\l- serialVersionUID\l|+ addOption()\l+ numOptions()\l+ getOption()\l+ getOption()\l+ getOptionArray()\l+ removeOption()\l+ removeOption()\l+ removeAllOptions()\l+ resetToDefaults()\l+ setViaCLIString()\l+ getAsCLIString()\l+ getHelpString()\l+ getHelp()\l+ getDescription()\l# splitParameterFromRemainingOptions()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1options_1_1Options.html",tooltip="File option."];
  Node5 -> Node17 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node18 -> Node17 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="optionList",arrowtail="open",fontname="Helvetica"];
  Node18 [label="{List\< Option \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node19 -> Node13 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node19 [label="{moa.streams.InstanceStream\n||+ getHeader()\l+ estimatedRemainingInstances()\l+ hasMoreInstances()\l+ nextInstance()\l+ isRestartable()\l+ restart()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfacemoa_1_1streams_1_1InstanceStream.html",tooltip="Interface representing a data stream of instances."];
  Node6 -> Node19 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node20 -> Node13 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="decayThresholdOption",arrowtail="open",fontname="Helvetica"];
  Node20 [label="{moa.options.FloatOption\n|# currentVal\l# defaultVal\l# minVal\l# maxVal\l- serialVersionUID\l|+ FloatOption()\l+ FloatOption()\l+ setValue()\l+ getValue()\l+ getMinValue()\l+ getMaxValue()\l+ getDefaultCLIString()\l+ getValueAsCLIString()\l+ setValueViaCLIString()\l+ getEditComponent()\l+ cliStringToDouble()\l+ doubleToCLIString()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1options_1_1FloatOption.html",tooltip="Float option."];
  Node21 -> Node20 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node21 [label="{moa.options.AbstractOption\n|+ illegalNameCharacters\l# name\l# cliChar\l# purpose\l|+ AbstractOption()\l+ getName()\l+ getCLIChar()\l+ getPurpose()\l+ resetToDefault()\l+ getStateString()\l+ copy()\l+ getDescription()\l+ getEditComponent()\l+ nameIsLegal()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1options_1_1AbstractOption.html",tooltip="Abstract option."];
  Node5 -> Node21 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node22 -> Node21 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node22 [label="{moa.options.Option\n||+ getName()\l+ getCLIChar()\l+ getPurpose()\l+ getDefaultCLIString()\l+ setValueViaCLIString()\l+ getValueAsCLIString()\l+ resetToDefault()\l+ getStateString()\l+ copy()\l+ getEditComponent()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfacemoa_1_1options_1_1Option.html",tooltip="Interface representing an option or parameter."];
  Node6 -> Node22 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node23 -> Node13 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="evaluationFrequencyOption\nnumAttsOption\ndecayHorizonOption",arrowtail="open",fontname="Helvetica"];
  Node23 [label="{moa.options.IntOption\n|# currentVal\l# defaultVal\l# minVal\l# maxVal\l- serialVersionUID\l|+ IntOption()\l+ IntOption()\l+ setValue()\l+ getValue()\l+ getMinValue()\l+ getMaxValue()\l+ getDefaultCLIString()\l+ getValueAsCLIString()\l+ setValueViaCLIString()\l+ getEditComponent()\l+ cliStringToInt()\l+ intToCLIString()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1options_1_1IntOption.html",tooltip="Int option."];
  Node21 -> Node23 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node24 -> Node1 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="clusterer",arrowtail="open",fontname="Helvetica"];
  Node24 [label="{moa.clusterers.AbstractClusterer\n|+ evaluateMicroClusteringOption\l# modelContext\l# trainingWeightSeenByModel\l# randomSeed\l# randomSeedOption\l# clustererRandom\l# clustering\l|+ getPurposeString()\l+ AbstractClusterer()\l+ prepareForUseImpl()\l+ setModelContext()\l+ getModelContext()\l+ setRandomSeed()\l+ trainingHasStarted()\l+ trainingWeightSeenByModel()\l+ resetLearning()\l+ trainOnInstance()\l+ getModelMeasurements()\l+ getDescription()\l+ getSubClusterers()\l+ copy()\l+ getClassNameString()\l+ getClassLabelString()\l+ getAttributeNameString()\l+ getNominalValueString()\l+ getAWTRenderer()\l+ resetLearningImpl()\l+ trainOnInstanceImpl()\l+ getModelDescription()\l+ implementsMicroClusterer()\l+ keepClassLabel()\l+ getMicroClusteringResult()\l+ contextIsCompatible()\l# getModelMeasurementsImpl()\l# modelAttIndexToInstanceAttIndex()\l# modelAttIndexToInstanceAttIndex()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1clusterers_1_1AbstractClusterer.html"];
  Node14 -> Node24 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node25 -> Node24 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node25 [label="{moa.clusterers.Clusterer\n||+ setModelContext()\l+ getModelContext()\l+ isRandomizable()\l+ setRandomSeed()\l+ trainingHasStarted()\l+ trainingWeightSeenByModel()\l+ resetLearning()\l+ trainOnInstance()\l+ getVotesForInstance()\l+ getModelMeasurements()\l+ getSubClusterers()\l+ copy()\l+ getClusteringResult()\l+ implementsMicroClusterer()\l+ getMicroClusteringResult()\l+ keepClassLabel()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfacemoa_1_1clusterers_1_1Clusterer.html"];
  Node6 -> Node25 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node15 -> Node25 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node26 -> Node25 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node26 [label="{moa.gui.AWTRenderable\n||+ getAWTRenderer()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfacemoa_1_1gui_1_1AWTRenderable.html",tooltip="Interface representing a component that is renderable."];
  Node27 -> Node24 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="clustering",arrowtail="open",fontname="Helvetica"];
  Node27 [label="{moa.cluster.Clustering\n|- clusters\l|+ Clustering()\l+ Clustering()\l+ Clustering()\l+ Clustering()\l+ Clustering()\l+ add()\l+ remove()\l+ get()\l+ getClustering()\l+ getClusteringCopy()\l+ size()\l+ dimension()\l+ getDescription()\l+ getMaxInclusionProbability()\l+ classValues()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1cluster_1_1Clustering.html"];
  Node5 -> Node27 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node28 -> Node27 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="clusters",arrowtail="open",fontname="Helvetica"];
  Node28 [label="{AutoExpandVector\< Cluster \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node23 -> Node24 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="randomSeedOption",arrowtail="open",fontname="Helvetica"];
  Node29 -> Node24 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="modelContext",arrowtail="open",fontname="Helvetica"];
  Node29 [label="{moa.core.InstancesHeader\n|- serialVersionUID\l|+ InstancesHeader()\l+ add()\l+ readInstance()\l+ getClassNameString()\l+ getClassLabelString()\l+ getAttributeNameString()\l+ getNominalValueString()\l+ getNumericValueString()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1core_1_1InstancesHeader.html",tooltip="Class for storing the header or context of a data stream."];
  Node30 -> Node29 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node30 [label="{Instances\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node31 -> Node24 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="evaluateMicroClusteringOption",arrowtail="open",fontname="Helvetica"];
  Node31 [label="{moa.options.FlagOption\n|# isSet\l- serialVersionUID\l|+ FlagOption()\l+ setValue()\l+ set()\l+ unset()\l+ isSet()\l+ getDefaultCLIString()\l+ getValueAsCLIString()\l+ setValueViaCLIString()\l+ getStateString()\l+ getEditComponent()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1options_1_1FlagOption.html",tooltip="Flag option."];
  Node21 -> Node31 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node32 -> Node24 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="clustererRandom",arrowtail="open",fontname="Helvetica"];
  Node32 [label="{Random\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node33 -> Node1 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="clusterEvents",arrowtail="open",fontname="Helvetica"];
  Node33 [label="{ArrayList\< ClusterEvent \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
}
