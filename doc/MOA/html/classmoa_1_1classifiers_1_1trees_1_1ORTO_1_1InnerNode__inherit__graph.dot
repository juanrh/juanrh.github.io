digraph G
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{moa.classifiers.trees.ORTO.InnerNode\n|# children\l# PHmT\l# PHMT\l# lossStatistics\l# weightSeen\l# previousWeight\l- serialVersionUID\l|+ InnerNode()\l+ numChildren()\l+ getChild()\l+ getChildIndex()\l+ setChild()\l+ setAlternateTree()\l+ getAlternateTree()\l+ calcByteSize()\l+ calculateDetph()\l+ PageHinckleyTest()\l+ setAdaptable()\l+ setAlternate()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node2 [label="{moa.classifiers.trees.ORTO.Node\n|+ ID\l# parent\l# alternateTree\l# Alternate\l# Adaptable\l- serialVersionUID\l|+ Node()\l+ getDescription()\l+ calcByteSize()\l+ isLeaf()\l+ calculateDetph()\l+ getLevel()\l+ setParent()\l+ getParent()\l+ setChild()\l+ getChildIndex()\l+ getNumSubtrees()\l+ processInstance()\l+ getPrediction()\l+ setAdaptable()\l+ setAlternate()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1classifiers_1_1trees_1_1ORTO_1_1Node.html"];
  Node3 -> Node2 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node3 [label="{moa.AbstractMOAObject\n||+ copy()\l+ measureByteSize()\l+ toString()\l+ copy()\l+ measureByteSize()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1AbstractMOAObject.html",tooltip="Abstract MOA Object."];
  Node4 -> Node3 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node4 [label="{moa.MOAObject\n||+ measureByteSize()\l+ copy()\l+ getDescription()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfacemoa_1_1MOAObject.html",tooltip="Interface implemented by classes in MOA, so that all are serializable, can produce..."];
  Node5 -> Node4 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node5 [label="{Serializable\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node1 -> Node6 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node6 [label="{moa.classifiers.trees.ORTO.OptionNode\n|# optionFFSSL\l# optionFFSeen\l- serialVersionUID\l|+ OptionNode()\l+ resetFF()\l+ isLeaf()\l+ getNumSubtrees()\l+ directionForBestTree()\l+ getPrediction()\l+ processInstance()\l+ getFFRatio()\l- aggregate()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1classifiers_1_1trees_1_1ORTO_1_1OptionNode.html"];
  Node1 -> Node7 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node7 [label="{moa.classifiers.trees.ORTO.SplitNode\n|# splitTest\l- serialVersionUID\l|+ setChild()\l+ SplitNode()\l+ instanceChildIndex()\l+ isLeaf()\l+ getNumSubtrees()\l+ processInstance()\l+ getPrediction()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1classifiers_1_1trees_1_1ORTO_1_1SplitNode.html"];
}
