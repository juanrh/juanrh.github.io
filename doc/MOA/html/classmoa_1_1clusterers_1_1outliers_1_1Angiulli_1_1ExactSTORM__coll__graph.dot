digraph G
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{moa.clusterers.outliers.Angiulli.ExactSTORM\n|+ radiusOption\l+ kOption\l+ queryFreqOption\l|+ ExactSTORM()\l+ getObjectInfo()\l+ Init()\l~ RemoveNode()\l~ DeleteExpiredNode()\l~ SearchOutliers()\l~ UpdateNodeType()\l~ UpdateNodeStatistics()\l# ProcessNewStreamObj()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node2 [label="{moa.clusterers.outliers.Angiulli.STORMBase\n|+ waitWinFullOption\l+ m_nBothInlierOutlier\l+ m_nOnlyInlier\l+ m_nOnlyOutlier\l# objId\l# windowNodes\l# ISB\l# m_WindowSize\l# m_radius\l# m_k\l# m_QueryFreq\l# FIRST_OBJ_ID\l|+ getStatistics()\l~ GetWindowEnd()\l~ GetWindowStart()\l~ IsWinFull()\l~ CanSearch()\l~ SaveOutlier()\l~ RemoveOutlier()\l~ PrintWindow()\l~ PrintNode()\l# UpdateStatistics()\l# IsNodeIdInWin()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1clusterers_1_1outliers_1_1Angiulli_1_1STORMBase.html"];
  Node3 -> Node2 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node3 [label="{moa.clusterers.outliers.MyBaseOutlierDetector\n|+ windowSizeOption\l+ outlierNotifier\l+ bStopAlgorithm\l# random\l# iMaxMemUsage\l# nRangeQueriesExecuted\l# nTotalRunTime\l# nTimePerObj\l# myProgressInfo\l# myOut\l# bTrace\l# bShowProgress\l- myClusters\l- outliersFound\l- m_timePreObjSum\l- nProcessed\l- _msPrev\l- _msNow\l- m_timePreObjInterval\l|+ getTimePerObj()\l+ getObjectInfo()\l+ getStatistics()\l+ getInstanceValues()\l+ PrintInstance()\l+ resetLearningImpl()\l+ trainOnInstanceImpl()\l+ processNewInstanceImpl()\l+ PrintOutliers()\l+ GetOutliersFound()\l+ getClusteringResult()\l+ getOutliersResult()\l+ implementsMicroClusterer()\l+ getMicroClusteringResult()\l+ getModelDescription()\l+ isRandomizable()\l+ keepClassLabel()\l+ getVotesForInstance()\l+ SetShowProgress()\l+ SetTrace()\l+ SetProgressInterval()\l+ SetMessagePrinter()\l+ SetUserInfo()\l# UpdateMaxMemUsage()\l# Init()\l# ProcessNewStreamObj()\l# IsNodeIdInWin()\l# AddOutlier()\l# RemoveExpiredOutlier()\l# RemoveOutlier()\l# getModelMeasurementsImpl()\l# ShowProgress()\l# ShowProgress()\l# Println()\l# Print()\l# Printf()\l# GetMemoryUsage()\l- ShowTimePerObj()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1clusterers_1_1outliers_1_1MyBaseOutlierDetector.html"];
  Node4 -> Node3 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node4 [label="{moa.clusterers.AbstractClusterer\n|+ evaluateMicroClusteringOption\l# modelContext\l# trainingWeightSeenByModel\l# randomSeed\l# randomSeedOption\l# clustererRandom\l# clustering\l|+ getPurposeString()\l+ AbstractClusterer()\l+ prepareForUseImpl()\l+ setModelContext()\l+ getModelContext()\l+ setRandomSeed()\l+ trainingHasStarted()\l+ trainingWeightSeenByModel()\l+ resetLearning()\l+ trainOnInstance()\l+ getModelMeasurements()\l+ getDescription()\l+ getSubClusterers()\l+ copy()\l+ getClassNameString()\l+ getClassLabelString()\l+ getAttributeNameString()\l+ getNominalValueString()\l+ getAWTRenderer()\l+ resetLearningImpl()\l+ trainOnInstanceImpl()\l+ getModelDescription()\l+ implementsMicroClusterer()\l+ keepClassLabel()\l+ getMicroClusteringResult()\l+ contextIsCompatible()\l# getModelMeasurementsImpl()\l# modelAttIndexToInstanceAttIndex()\l# modelAttIndexToInstanceAttIndex()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1clusterers_1_1AbstractClusterer.html"];
  Node5 -> Node4 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node5 [label="{moa.options.AbstractOptionHandler\n|# options\l# classOptionNamesToPreparedObjects\l- serialVersionUID\l|+ getPurposeString()\l+ getOptions()\l+ prepareForUse()\l+ prepareForUse()\l+ getCLICreationString()\l+ copy()\l# prepareForUseImpl()\l# discoverOptionsViaReflection()\l# prepareClassOptions()\l# getPreparedClassOption()\l# getPreparedClassOption()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1options_1_1AbstractOptionHandler.html",tooltip="Abstract Option Handler."];
  Node6 -> Node5 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node6 [label="{moa.AbstractMOAObject\n||+ copy()\l+ measureByteSize()\l+ toString()\l+ copy()\l+ measureByteSize()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1AbstractMOAObject.html",tooltip="Abstract MOA Object."];
  Node7 -> Node6 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node7 [label="{moa.MOAObject\n||+ measureByteSize()\l+ copy()\l+ getDescription()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfacemoa_1_1MOAObject.html",tooltip="Interface implemented by classes in MOA, so that all are serializable, can produce..."];
  Node8 -> Node7 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node8 [label="{Serializable\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node9 -> Node5 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node9 [label="{moa.options.OptionHandler\n||+ getPurposeString()\l+ getOptions()\l+ prepareForUse()\l+ prepareForUse()\l+ copy()\l+ getCLICreationString()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfacemoa_1_1options_1_1OptionHandler.html",tooltip="Interface representing an object that handles options or parameters."];
  Node7 -> Node9 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node10 -> Node5 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="classOptionNamesToPreparedObjects",arrowtail="open",fontname="Helvetica"];
  Node10 [label="{Map\< String, Object \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node11 -> Node5 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="options",arrowtail="open",fontname="Helvetica"];
  Node11 [label="{moa.options.Options\n|# optionList\l- serialVersionUID\l|+ addOption()\l+ numOptions()\l+ getOption()\l+ getOption()\l+ getOptionArray()\l+ removeOption()\l+ removeOption()\l+ removeAllOptions()\l+ resetToDefaults()\l+ setViaCLIString()\l+ getAsCLIString()\l+ getHelpString()\l+ getHelp()\l+ getDescription()\l# splitParameterFromRemainingOptions()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1options_1_1Options.html",tooltip="File option."];
  Node6 -> Node11 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node12 -> Node11 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="optionList",arrowtail="open",fontname="Helvetica"];
  Node12 [label="{List\< Option \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node13 -> Node4 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node13 [label="{moa.clusterers.Clusterer\n||+ setModelContext()\l+ getModelContext()\l+ isRandomizable()\l+ setRandomSeed()\l+ trainingHasStarted()\l+ trainingWeightSeenByModel()\l+ resetLearning()\l+ trainOnInstance()\l+ getVotesForInstance()\l+ getModelMeasurements()\l+ getSubClusterers()\l+ copy()\l+ getClusteringResult()\l+ implementsMicroClusterer()\l+ getMicroClusteringResult()\l+ keepClassLabel()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfacemoa_1_1clusterers_1_1Clusterer.html"];
  Node7 -> Node13 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node9 -> Node13 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node14 -> Node13 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node14 [label="{moa.gui.AWTRenderable\n||+ getAWTRenderer()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfacemoa_1_1gui_1_1AWTRenderable.html",tooltip="Interface representing a component that is renderable."];
  Node15 -> Node4 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="clustering",arrowtail="open",fontname="Helvetica"];
  Node15 [label="{moa.cluster.Clustering\n|- clusters\l|+ Clustering()\l+ Clustering()\l+ Clustering()\l+ Clustering()\l+ Clustering()\l+ add()\l+ remove()\l+ get()\l+ getClustering()\l+ getClusteringCopy()\l+ size()\l+ dimension()\l+ getDescription()\l+ getMaxInclusionProbability()\l+ classValues()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1cluster_1_1Clustering.html"];
  Node6 -> Node15 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node16 -> Node15 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="clusters",arrowtail="open",fontname="Helvetica"];
  Node16 [label="{AutoExpandVector\< Cluster \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node17 -> Node4 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="randomSeedOption",arrowtail="open",fontname="Helvetica"];
  Node17 [label="{moa.options.IntOption\n|# currentVal\l# defaultVal\l# minVal\l# maxVal\l- serialVersionUID\l|+ IntOption()\l+ IntOption()\l+ setValue()\l+ getValue()\l+ getMinValue()\l+ getMaxValue()\l+ getDefaultCLIString()\l+ getValueAsCLIString()\l+ setValueViaCLIString()\l+ getEditComponent()\l+ cliStringToInt()\l+ intToCLIString()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1options_1_1IntOption.html",tooltip="Int option."];
  Node18 -> Node17 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node18 [label="{moa.options.AbstractOption\n|+ illegalNameCharacters\l# name\l# cliChar\l# purpose\l|+ AbstractOption()\l+ getName()\l+ getCLIChar()\l+ getPurpose()\l+ resetToDefault()\l+ getStateString()\l+ copy()\l+ getDescription()\l+ getEditComponent()\l+ nameIsLegal()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1options_1_1AbstractOption.html",tooltip="Abstract option."];
  Node6 -> Node18 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node19 -> Node18 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node19 [label="{moa.options.Option\n||+ getName()\l+ getCLIChar()\l+ getPurpose()\l+ getDefaultCLIString()\l+ setValueViaCLIString()\l+ getValueAsCLIString()\l+ resetToDefault()\l+ getStateString()\l+ copy()\l+ getEditComponent()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfacemoa_1_1options_1_1Option.html",tooltip="Interface representing an option or parameter."];
  Node7 -> Node19 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node20 -> Node4 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="modelContext",arrowtail="open",fontname="Helvetica"];
  Node20 [label="{moa.core.InstancesHeader\n|- serialVersionUID\l|+ InstancesHeader()\l+ add()\l+ readInstance()\l+ getClassNameString()\l+ getClassLabelString()\l+ getAttributeNameString()\l+ getNominalValueString()\l+ getNumericValueString()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1core_1_1InstancesHeader.html",tooltip="Class for storing the header or context of a data stream."];
  Node21 -> Node20 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node21 [label="{Instances\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node22 -> Node4 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="evaluateMicroClusteringOption",arrowtail="open",fontname="Helvetica"];
  Node22 [label="{moa.options.FlagOption\n|# isSet\l- serialVersionUID\l|+ FlagOption()\l+ setValue()\l+ set()\l+ unset()\l+ isSet()\l+ getDefaultCLIString()\l+ getValueAsCLIString()\l+ setValueViaCLIString()\l+ getStateString()\l+ getEditComponent()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1options_1_1FlagOption.html",tooltip="Flag option."];
  Node18 -> Node22 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node23 -> Node4 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="clustererRandom",arrowtail="open",fontname="Helvetica"];
  Node23 [label="{Random\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node24 -> Node3 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="outliersFound",arrowtail="open",fontname="Helvetica"];
  Node24 [label="{TreeSet\< Outlier \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node25 -> Node3 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="myOut",arrowtail="open",fontname="Helvetica"];
  Node25 [label="{moa.clusterers.outliers.MyBaseOutlierDetector.PrintMsg\n||+ print()\l+ println()\l+ printf()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfacemoa_1_1clusterers_1_1outliers_1_1MyBaseOutlierDetector_1_1PrintMsg.html"];
  Node15 -> Node3 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="myClusters",arrowtail="open",fontname="Helvetica"];
  Node17 -> Node3 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="windowSizeOption",arrowtail="open",fontname="Helvetica"];
  Node26 -> Node3 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="outlierNotifier",arrowtail="open",fontname="Helvetica"];
  Node26 [label="{moa.clusterers.outliers.MyBaseOutlierDetector.OutlierNotifier\n||+ OnOutlier()\l+ OnInlier()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1clusterers_1_1outliers_1_1MyBaseOutlierDetector_1_1OutlierNotifier.html"];
  Node27 -> Node3 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="myProgressInfo",arrowtail="open",fontname="Helvetica"];
  Node27 [label="{moa.clusterers.outliers.MyBaseOutlierDetector.ProgressInfo\n||+ GetInterval()\l+ ShowProgress()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfacemoa_1_1clusterers_1_1outliers_1_1MyBaseOutlierDetector_1_1ProgressInfo.html"];
  Node23 -> Node3 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="random",arrowtail="open",fontname="Helvetica"];
  Node28 -> Node2 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="windowNodes",arrowtail="open",fontname="Helvetica"];
  Node28 [label="{Vector\< ISBNode \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node29 -> Node2 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="ISB",arrowtail="open",fontname="Helvetica"];
  Node29 [label="{moa.clusterers.outliers.Angiulli.ISBIndex\n|~ mtree\l~ mapNodes\l~ m_radius\l~ m_k\l|+ ISBIndex()\l+ RangeSearch()\l+ Insert()\l+ Remove()\l~ MapGetNodes()\l~ MapCountObjRefs()\l~ MapInsert()\l~ MapDelete()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1clusterers_1_1outliers_1_1Angiulli_1_1ISBIndex.html"];
  Node30 -> Node29 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="mapNodes",arrowtail="open",fontname="Helvetica"];
  Node30 [label="{Map\< Integer, Set\< ISBNode \> \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node31 -> Node29 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="mtree",arrowtail="open",fontname="Helvetica"];
  Node31 [label="{moa.clusterers.outliers.Angiulli.MyMTree\n|- nonRandomPromotion\l|+ add()\l+ remove()\l~ MyMTree()\l~ getDistanceFunction()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1clusterers_1_1outliers_1_1Angiulli_1_1MyMTree.html"];
  Node32 -> Node31 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node32 [label="{moa::clusterers::outliers::utils::mtree::MTree\< StreamObj \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node33 -> Node31 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="nonRandomPromotion",arrowtail="open",fontname="Helvetica"];
  Node33 [label="{PromotionFunction\< StreamObj \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node22 -> Node2 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="waitWinFullOption",arrowtail="open",fontname="Helvetica"];
  Node34 -> Node1 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="radiusOption",arrowtail="open",fontname="Helvetica"];
  Node34 [label="{moa.options.FloatOption\n|# currentVal\l# defaultVal\l# minVal\l# maxVal\l- serialVersionUID\l|+ FloatOption()\l+ FloatOption()\l+ setValue()\l+ getValue()\l+ getMinValue()\l+ getMaxValue()\l+ getDefaultCLIString()\l+ getValueAsCLIString()\l+ setValueViaCLIString()\l+ getEditComponent()\l+ cliStringToDouble()\l+ doubleToCLIString()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1options_1_1FloatOption.html",tooltip="Float option."];
  Node18 -> Node34 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node17 -> Node1 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="kOption\nqueryFreqOption",arrowtail="open",fontname="Helvetica"];
}
