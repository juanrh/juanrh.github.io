digraph G
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{moa.classifiers.trees.FIMTDD.FIMTDDActiveLearningNode\n|+ learningModel\l# parent\l# nodeStatistics\l# PHmT\l# PHMT\l|+ FIMTDDActiveLearningNode()\l+ setParent()\l+ getParent()\l+ getWeightSeen()\l+ learnFromInstance()\l+ getBestSplitSuggestions()\l+ getPrediction()\l+ getPredictionTargetMean()\l+ getClassVotes()\l+ getError()\l+ getPHError()\l+ getSquaredError()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node2 [label="{moa.classifiers.trees.FIMTDD.AdaptationCompatibleNode\n||+ setParent()\l+ getParent()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfacemoa_1_1classifiers_1_1trees_1_1FIMTDD_1_1AdaptationCompatibleNode.html",tooltip="A new interface for nodes to be used in an adaptive setting."];
  Node3 -> Node1 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="learningModel",arrowtail="open",fontname="Helvetica"];
  Node3 [label="{moa.classifiers.trees.FIMTDD.FIMTDDPerceptron\n|# weightAttribute\l# attributeStatistics\l# squaredAttributeStatistics\l# instancesSeen\l# reset\l|+ getDescription()\l+ FIMTDDPerceptron()\l+ FIMTDDPerceptron()\l+ setWeights()\l+ getWeights()\l+ resetLearningImpl()\l+ trainOnInstanceImpl()\l+ prediction()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1classifiers_1_1trees_1_1FIMTDD_1_1FIMTDDPerceptron.html",tooltip="A Perceptron classifier modified to conform to the specifications of Ikonomovska..."];
  Node4 -> Node3 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node4 [label="{moa.AbstractMOAObject\n||+ copy()\l+ measureByteSize()\l+ toString()\l+ copy()\l+ measureByteSize()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1AbstractMOAObject.html",tooltip="Abstract MOA Object."];
  Node5 -> Node4 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node5 [label="{moa.MOAObject\n||+ measureByteSize()\l+ copy()\l+ getDescription()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfacemoa_1_1MOAObject.html",tooltip="Interface implemented by classes in MOA, so that all are serializable, can produce..."];
  Node6 -> Node5 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node6 [label="{Serializable\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node7 -> Node3 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="squaredAttributeStatistics\nattributeStatistics",arrowtail="open",fontname="Helvetica"];
  Node7 [label="{moa.core.DoubleVector\n|# array\l- serialVersionUID\l|+ DoubleVector()\l+ DoubleVector()\l+ DoubleVector()\l+ numValues()\l+ setValue()\l+ addToValue()\l+ addValues()\l+ addValues()\l+ subtractValues()\l+ subtractValues()\l+ addToValues()\l+ scaleValues()\l+ getValue()\l+ sumOfValues()\l+ maxIndex()\l+ normalize()\l+ numNonZeroEntries()\l+ minWeight()\l+ getArrayCopy()\l+ getArrayRef()\l+ getSingleLineDescription()\l+ getSingleLineDescription()\l+ getDescription()\l# setArrayLength()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1core_1_1DoubleVector.html",tooltip="Vector of double numbers with some utilities."];
  Node4 -> Node7 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node7 -> Node1 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="nodeStatistics",arrowtail="open",fontname="Helvetica"];
}
