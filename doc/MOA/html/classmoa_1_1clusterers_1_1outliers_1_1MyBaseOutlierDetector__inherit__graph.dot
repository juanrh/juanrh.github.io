digraph G
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{moa.clusterers.outliers.MyBaseOutlierDetector\n|+ windowSizeOption\l+ outlierNotifier\l+ bStopAlgorithm\l# random\l# iMaxMemUsage\l# nRangeQueriesExecuted\l# nTotalRunTime\l# nTimePerObj\l# myProgressInfo\l# myOut\l# bTrace\l# bShowProgress\l- myClusters\l- outliersFound\l- m_timePreObjSum\l- nProcessed\l- _msPrev\l- _msNow\l- m_timePreObjInterval\l|+ getTimePerObj()\l+ getObjectInfo()\l+ getStatistics()\l+ getInstanceValues()\l+ PrintInstance()\l+ resetLearningImpl()\l+ trainOnInstanceImpl()\l+ processNewInstanceImpl()\l+ PrintOutliers()\l+ GetOutliersFound()\l+ getClusteringResult()\l+ getOutliersResult()\l+ implementsMicroClusterer()\l+ getMicroClusteringResult()\l+ getModelDescription()\l+ isRandomizable()\l+ keepClassLabel()\l+ getVotesForInstance()\l+ SetShowProgress()\l+ SetTrace()\l+ SetProgressInterval()\l+ SetMessagePrinter()\l+ SetUserInfo()\l# UpdateMaxMemUsage()\l# Init()\l# ProcessNewStreamObj()\l# IsNodeIdInWin()\l# AddOutlier()\l# RemoveExpiredOutlier()\l# RemoveOutlier()\l# getModelMeasurementsImpl()\l# ShowProgress()\l# ShowProgress()\l# Println()\l# Print()\l# Printf()\l# GetMemoryUsage()\l- ShowTimePerObj()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node2 [label="{moa.clusterers.AbstractClusterer\n|+ evaluateMicroClusteringOption\l# modelContext\l# trainingWeightSeenByModel\l# randomSeed\l# randomSeedOption\l# clustererRandom\l# clustering\l|+ getPurposeString()\l+ AbstractClusterer()\l+ prepareForUseImpl()\l+ setModelContext()\l+ getModelContext()\l+ setRandomSeed()\l+ trainingHasStarted()\l+ trainingWeightSeenByModel()\l+ resetLearning()\l+ trainOnInstance()\l+ getModelMeasurements()\l+ getDescription()\l+ getSubClusterers()\l+ copy()\l+ getClassNameString()\l+ getClassLabelString()\l+ getAttributeNameString()\l+ getNominalValueString()\l+ getAWTRenderer()\l+ resetLearningImpl()\l+ trainOnInstanceImpl()\l+ getModelDescription()\l+ implementsMicroClusterer()\l+ keepClassLabel()\l+ getMicroClusteringResult()\l+ contextIsCompatible()\l# getModelMeasurementsImpl()\l# modelAttIndexToInstanceAttIndex()\l# modelAttIndexToInstanceAttIndex()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1clusterers_1_1AbstractClusterer.html"];
  Node3 -> Node2 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node3 [label="{moa.options.AbstractOptionHandler\n|# options\l# classOptionNamesToPreparedObjects\l- serialVersionUID\l|+ getPurposeString()\l+ getOptions()\l+ prepareForUse()\l+ prepareForUse()\l+ getCLICreationString()\l+ copy()\l# prepareForUseImpl()\l# discoverOptionsViaReflection()\l# prepareClassOptions()\l# getPreparedClassOption()\l# getPreparedClassOption()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1options_1_1AbstractOptionHandler.html",tooltip="Abstract Option Handler."];
  Node4 -> Node3 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node4 [label="{moa.AbstractMOAObject\n||+ copy()\l+ measureByteSize()\l+ toString()\l+ copy()\l+ measureByteSize()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1AbstractMOAObject.html",tooltip="Abstract MOA Object."];
  Node5 -> Node4 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node5 [label="{moa.MOAObject\n||+ measureByteSize()\l+ copy()\l+ getDescription()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfacemoa_1_1MOAObject.html",tooltip="Interface implemented by classes in MOA, so that all are serializable, can produce..."];
  Node6 -> Node5 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node6 [label="{Serializable\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node7 -> Node3 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node7 [label="{moa.options.OptionHandler\n||+ getPurposeString()\l+ getOptions()\l+ prepareForUse()\l+ prepareForUse()\l+ copy()\l+ getCLICreationString()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfacemoa_1_1options_1_1OptionHandler.html",tooltip="Interface representing an object that handles options or parameters."];
  Node5 -> Node7 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node8 -> Node2 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node8 [label="{moa.clusterers.Clusterer\n||+ setModelContext()\l+ getModelContext()\l+ isRandomizable()\l+ setRandomSeed()\l+ trainingHasStarted()\l+ trainingWeightSeenByModel()\l+ resetLearning()\l+ trainOnInstance()\l+ getVotesForInstance()\l+ getModelMeasurements()\l+ getSubClusterers()\l+ copy()\l+ getClusteringResult()\l+ implementsMicroClusterer()\l+ getMicroClusteringResult()\l+ keepClassLabel()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfacemoa_1_1clusterers_1_1Clusterer.html"];
  Node5 -> Node8 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node7 -> Node8 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node9 -> Node8 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node9 [label="{moa.gui.AWTRenderable\n||+ getAWTRenderer()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfacemoa_1_1gui_1_1AWTRenderable.html",tooltip="Interface representing a component that is renderable."];
  Node1 -> Node10 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node10 [label="{moa.clusterers.outliers.AbstractC.AbstractCBase\n|+ m_nBothInlierOutlier\l+ m_nOnlyInlier\l+ m_nOnlyOutlier\l# objId\l# windowNodes\l# ISB\l# m_WindowSize\l# m_radius\l# m_Fraction\l# bWarning\l# FIRST_OBJ_ID\l|+ getObjectInfo()\l+ getStatistics()\l+ Print_lt_cnt()\l~ GetWindowEnd()\l~ GetWindowStart()\l~ IsWinFull()\l~ GetExpirationTime()\l~ AddNode()\l~ RemoveNode()\l~ GetExpiredNode()\l~ SaveOutlier()\l~ RemoveOutlier()\l~ PrintWindow()\l~ PrintNode()\l# IsNodeIdInWin()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1clusterers_1_1outliers_1_1AbstractC_1_1AbstractCBase.html"];
  Node10 -> Node11 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node11 [label="{moa.clusterers.outliers.AbstractC.AbstractC\n|+ radiusOption\l+ kOption\l+ waitWinFullOption\l|+ AbstractC()\l+ Init()\l~ UpdateNeighbors()\l~ OutputPatterns()\l# ProcessNewStreamObj()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1clusterers_1_1outliers_1_1AbstractC_1_1AbstractC.html"];
  Node1 -> Node12 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node12 [label="{moa.clusterers.outliers.Angiulli.STORMBase\n|+ waitWinFullOption\l+ m_nBothInlierOutlier\l+ m_nOnlyInlier\l+ m_nOnlyOutlier\l# objId\l# windowNodes\l# ISB\l# m_WindowSize\l# m_radius\l# m_k\l# m_QueryFreq\l# FIRST_OBJ_ID\l|+ getStatistics()\l~ GetWindowEnd()\l~ GetWindowStart()\l~ IsWinFull()\l~ CanSearch()\l~ SaveOutlier()\l~ RemoveOutlier()\l~ PrintWindow()\l~ PrintNode()\l# UpdateStatistics()\l# IsNodeIdInWin()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1clusterers_1_1outliers_1_1Angiulli_1_1STORMBase.html"];
  Node12 -> Node13 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node13 [label="{moa.clusterers.outliers.Angiulli.ApproxSTORM\n|+ radiusOption\l+ kOption\l+ queryFreqOption\l+ pOption\l~ safe_inliers\l~ m_FractWindowSize\l~ m_Random\l|+ getObjectInfo()\l+ ApproxSTORM()\l+ Init()\l~ AddSafeInlier()\l~ GetSafeInlier()\l~ IsSafeInlier()\l~ PrintSafeInliers()\l~ RemoveNode()\l~ RemoveSafeInlier()\l~ DeleteExpiredNode()\l~ SearchOutliers()\l~ UpdateNodeType()\l~ UpdateNodeStatistics()\l# ProcessNewStreamObj()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1clusterers_1_1outliers_1_1Angiulli_1_1ApproxSTORM.html"];
  Node12 -> Node14 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node14 [label="{moa.clusterers.outliers.Angiulli.ExactSTORM\n|+ radiusOption\l+ kOption\l+ queryFreqOption\l|+ ExactSTORM()\l+ getObjectInfo()\l+ Init()\l~ RemoveNode()\l~ DeleteExpiredNode()\l~ SearchOutliers()\l~ UpdateNodeType()\l~ UpdateNodeStatistics()\l# ProcessNewStreamObj()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1clusterers_1_1outliers_1_1Angiulli_1_1ExactSTORM.html"];
  Node1 -> Node15 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node15 [label="{moa.clusterers.outliers.AnyOut.AnyOut\n|- FIRST_OBJ_ID\l- minDepth\l- maxDepth\l- anyout\l- idCounter\l- windowSize\l- objects\l- trainingSet\l- trainingCount\l- trainingSetSize\l- truePositive\l- falsePositive\l- totalOutliers\l- outlierClass\l- serialVersionUID\l|+ AnyOut()\l+ resetLearningImpl()\l+ getPurposeString()\l+ getOptions()\l+ getObjectInfo()\l+ getStatistics()\l# Init()\l# ProcessNewStreamObj()\l# IsNodeIdInWin()\l- getWindowEnd()\l- getWindowStart()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1clusterers_1_1outliers_1_1AnyOut_1_1AnyOut.html"];
  Node1 -> Node16 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node16 [label="{moa.clusterers.outliers.MCOD.MCODBase\n|+ bWarning\l+ m_nBothInlierOutlier\l+ m_nOnlyInlier\l+ m_nOnlyOutlier\l# objId\l# windowNodes\l# eventQueue\l# mtreeMC\l# setMC\l# nodesReinsert\l# ISB_PD\l# m_WindowSize\l# m_radius\l# m_k\l# m_theta\l# FIRST_OBJ_ID\l|+ getObjectInfo()\l+ getStatistics()\l+ PrintNodeSet()\l+ PrintMCSet()\l+ PrintNodeVector()\l+ PrintNodeList()\l+ PrintEventQueue()\l+ PrintPD()\l~ GetWindowEnd()\l~ GetWindowStart()\l~ IsWinFull()\l~ GetExpirationTime()\l~ SaveOutlier()\l~ RemoveOutlier()\l~ AddNode()\l~ RemoveNode()\l~ UpdateStatistics()\l~ GetExpiredNode()\l~ AddMicroCluster()\l~ RemoveMicroCluster()\l~ RangeSearchMC()\l~ GetEuclideanDist()\l~ PrintWindow()\l~ PrintNode()\l# IsNodeIdInWin()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1clusterers_1_1outliers_1_1MCOD_1_1MCODBase.html"];
  Node16 -> Node17 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node17 [label="{moa.clusterers.outliers.MCOD.MCOD\n|+ radiusOption\l+ kOption\l|+ MCOD()\l+ Init()\l~ SetNodeType()\l~ AddNeighbor()\l~ ProcessNewNode()\l~ AddToEventQueue()\l~ ProcessEventQueue()\l~ ProcessExpiredNode()\l# ProcessNewStreamObj()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1clusterers_1_1outliers_1_1MCOD_1_1MCOD.html"];
  Node1 -> Node18 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node18 [label="{moa.clusterers.outliers.SimpleCOD.SimpleCODBase\n|+ bWarning\l+ m_nBothInlierOutlier\l+ m_nOnlyInlier\l+ m_nOnlyOutlier\l# objId\l# windowNodes\l# eventQueue\l# ISB\l# m_WindowSize\l# m_radius\l# m_k\l# FIRST_OBJ_ID\l|+ getObjectInfo()\l+ getStatistics()\l+ PrintNodeSet()\l+ PrintNodeVector()\l+ PrintNodeList()\l+ PrintEventQueue()\l+ PrintISB()\l~ GetWindowEnd()\l~ GetWindowStart()\l~ IsWinFull()\l~ GetExpirationTime()\l~ SaveOutlier()\l~ RemoveOutlier()\l~ AddNode()\l~ RemoveNode()\l~ UpdateStatistics()\l~ GetExpiredNode()\l~ GetEuclideanDist()\l~ PrintWindow()\l~ PrintNode()\l# IsNodeIdInWin()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1clusterers_1_1outliers_1_1SimpleCOD_1_1SimpleCODBase.html"];
  Node18 -> Node19 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node19 [label="{moa.clusterers.outliers.SimpleCOD.SimpleCOD\n|+ radiusOption\l+ kOption\l|+ SimpleCOD()\l+ Init()\l~ ProcessNewNode()\l~ AddToEventQueue()\l~ ProcessEventQueue()\l~ ProcessExpiredNode()\l# ProcessNewStreamObj()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1clusterers_1_1outliers_1_1SimpleCOD_1_1SimpleCOD.html"];
}
