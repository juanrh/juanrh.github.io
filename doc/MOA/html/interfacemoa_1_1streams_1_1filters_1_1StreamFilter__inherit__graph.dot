digraph G
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{moa.streams.filters.StreamFilter\n||+ setInputStream()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node2 [label="{moa.streams.InstanceStream\n||+ getHeader()\l+ estimatedRemainingInstances()\l+ hasMoreInstances()\l+ nextInstance()\l+ isRestartable()\l+ restart()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfacemoa_1_1streams_1_1InstanceStream.html",tooltip="Interface representing a data stream of instances."];
  Node3 -> Node2 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node3 [label="{moa.MOAObject\n||+ measureByteSize()\l+ copy()\l+ getDescription()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfacemoa_1_1MOAObject.html",tooltip="Interface implemented by classes in MOA, so that all are serializable, can produce..."];
  Node4 -> Node3 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node4 [label="{Serializable\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node1 -> Node5 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node5 [label="{moa.streams.filters.AbstractStreamFilter\n|# inputStream\l|+ setInputStream()\l+ prepareForUseImpl()\l+ estimatedRemainingInstances()\l+ hasMoreInstances()\l+ isRestartable()\l+ restart()\l# restartImpl()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1streams_1_1filters_1_1AbstractStreamFilter.html",tooltip="Abstract Stream Filter."];
  Node5 -> Node6 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node6 [label="{moa.streams.filters.AddNoiseFilter\n|+ randomSeedOption\l+ attNoiseFractionOption\l+ classNoiseFractionOption\l# random\l# attValObservers\l- serialVersionUID\l|+ getPurposeString()\l+ getHeader()\l+ nextInstance()\l+ getDescription()\l# restartImpl()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1streams_1_1filters_1_1AddNoiseFilter.html",tooltip="Filter for adding random noise to examples in a stream."];
  Node5 -> Node7 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node7 [label="{moa.streams.filters.CacheFilter\n|# cache\l# indexCache\l# totalCacheInstances\l# isInitialized\l- serialVersionUID\l|+ getPurposeString()\l+ getHeader()\l+ nextInstance()\l+ hasMoreInstances()\l+ estimatedRemainingInstances()\l+ getDescription()\l# restartImpl()\l# init()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1streams_1_1filters_1_1CacheFilter.html",tooltip="Filter for representing a stream that is cached in memory."];
  Node5 -> Node8 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node8 [label="{moa.streams.filters.ReplacingMissingValuesFilter\n|+ numericReplacementStrategyOption\l+ nominalReplacementStrategyOption\l+ numericalConstantValueOption\l# numAttributes\l# columnsStatistics\l# numberOfSamples\l# lastNominalValues\l# frequencies\l# numericalSelectedStrategy\l# nominalSelectedStrategy\l- serialVersionUID\l|+ getPurposeString()\l+ getHeader()\l+ nextInstance()\l+ getDescription()\l# restartImpl()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1streams_1_1filters_1_1ReplacingMissingValuesFilter.html",tooltip="Replaces the missing values with another value according to the selected strategy..."];
}
