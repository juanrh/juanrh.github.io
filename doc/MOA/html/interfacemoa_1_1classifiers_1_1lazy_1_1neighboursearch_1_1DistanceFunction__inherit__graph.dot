digraph G
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{moa.classifiers.lazy.neighboursearch.DistanceFunction\n||+ setInstances()\l+ getInstances()\l+ setAttributeIndices()\l+ getAttributeIndices()\l+ setInvertSelection()\l+ getInvertSelection()\l+ distance()\l+ distance()\l+ postProcessDistances()\l+ update()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node1 -> Node2 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node2 [label="{moa.classifiers.lazy.neighboursearch.NormalizableDistance\n|+ R_MIN\l+ R_MAX\l+ R_WIDTH\l# m_Data\l# m_DontNormalize\l# m_Ranges\l# m_ActiveIndices\l# m_Validated\l|+ NormalizableDistance()\l+ NormalizableDistance()\l+ globalInfo()\l+ dontNormalizeTipText()\l+ setDontNormalize()\l+ getDontNormalize()\l+ attributeIndicesTipText()\l+ setAttributeIndices()\l+ getAttributeIndices()\l+ invertSelectionTipText()\l+ setInvertSelection()\l+ getInvertSelection()\l+ setInstances()\l+ getInstances()\l+ postProcessDistances()\l+ update()\l+ distance()\l+ distance()\l+ initializeRanges()\l+ updateRangesFirst()\l+ updateRanges()\l+ initializeRangesEmpty()\l+ updateRanges()\l+ initializeRanges()\l+ initializeRanges()\l+ updateRanges()\l+ inRanges()\l+ rangesSet()\l+ getRanges()\l+ toString()\l+ isMissingValue()\l# invalidate()\l# validate()\l# initialize()\l# initializeAttributeIndices()\l# updateDistance()\l# norm()\l# difference()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1classifiers_1_1lazy_1_1neighboursearch_1_1NormalizableDistance.html",tooltip="Represents the abstract ancestor for normalizable distance functions, like Euclidean..."];
  Node2 -> Node3 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node3 [label="{moa.classifiers.lazy.neighboursearch.EuclideanDistance\n|- serialVersionUID\l|+ EuclideanDistance()\l+ EuclideanDistance()\l+ globalInfo()\l+ distance()\l+ postProcessDistances()\l+ sqDifference()\l+ getMiddle()\l+ closestPoint()\l+ valueIsSmallerEqual()\l# updateDistance()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1classifiers_1_1lazy_1_1neighboursearch_1_1EuclideanDistance.html",tooltip="Implementing Euclidean distance (or similarity) function."];
}
