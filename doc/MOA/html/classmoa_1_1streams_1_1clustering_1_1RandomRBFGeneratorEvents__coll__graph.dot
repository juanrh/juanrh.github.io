digraph G
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{moa.streams.clustering.RandomRBFGeneratorEvents\n|+ modelRandomSeedOption\l+ instanceRandomSeedOption\l+ numClusterOption\l+ numClusterRangeOption\l+ kernelRadiiOption\l+ kernelRadiiRangeOption\l+ densityRangeOption\l+ speedOption\l+ speedRangeOption\l+ noiseLevelOption\l+ noiseInClusterOption\l+ eventFrequencyOption\l+ eventMergeSplitOption\l+ eventDeleteCreateOption\l# instanceRandom\l# streamHeader\l- listeners\l- merge_threshold\l- kernelMovePointFrequency\l- maxDistanceMoveThresholdByStep\l- maxOverlapFitRuns\l- eventFrequencyRange\l- debug\l- kernels\l- numGeneratedInstances\l- numActiveKernels\l- nextEventCounter\l- nextEventChoice\l- clusterIdCounter\l- mergeClusterA\l- mergeClusterB\l- mergeKernelsOverlapping\l- serialVersionUID\l|+ RandomRBFGeneratorEvents()\l+ getHeader()\l+ estimatedRemainingInstances()\l+ hasMoreInstances()\l+ isRestartable()\l+ prepareForUseImpl()\l+ restart()\l+ nextInstance()\l+ getGeneratingClusters()\l+ getMicroClustering()\l+ getDescription()\l+ addClusterChangeListener()\l+ removeClusterChangeListener()\l+ getPurposeString()\l+ getParameterString()\l# generateHeader()\l# initKernels()\l# fireClusterChange()\l- eventScheduler()\l- getNextEvent()\l- fadeOut()\l- fadeIn()\l- changeWeight()\l- changeRadius()\l- splitKernel()\l- mergeKernels()\l- getNoisePoint()\l- chooseWeightedElement()\l- normalizeWeights()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node2 [label="{moa.streams.clustering.ClusteringStream\n|+ decayHorizonOption\l+ decayThresholdOption\l+ evaluationFrequencyOption\l+ numAttsOption\l|+ getDecayHorizon()\l+ getDecayThreshold()\l+ getEvaluationFrequency()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1streams_1_1clustering_1_1ClusteringStream.html"];
  Node3 -> Node2 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node3 [label="{moa.options.AbstractOptionHandler\n|# options\l# classOptionNamesToPreparedObjects\l- serialVersionUID\l|+ getPurposeString()\l+ getOptions()\l+ prepareForUse()\l+ prepareForUse()\l+ getCLICreationString()\l+ copy()\l# prepareForUseImpl()\l# discoverOptionsViaReflection()\l# prepareClassOptions()\l# getPreparedClassOption()\l# getPreparedClassOption()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1options_1_1AbstractOptionHandler.html",tooltip="Abstract Option Handler."];
  Node4 -> Node3 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node4 [label="{moa.AbstractMOAObject\n||+ copy()\l+ measureByteSize()\l+ toString()\l+ copy()\l+ measureByteSize()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1AbstractMOAObject.html",tooltip="Abstract MOA Object."];
  Node5 -> Node4 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node5 [label="{moa.MOAObject\n||+ measureByteSize()\l+ copy()\l+ getDescription()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfacemoa_1_1MOAObject.html",tooltip="Interface implemented by classes in MOA, so that all are serializable, can produce..."];
  Node6 -> Node5 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node6 [label="{Serializable\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node7 -> Node3 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node7 [label="{moa.options.OptionHandler\n||+ getPurposeString()\l+ getOptions()\l+ prepareForUse()\l+ prepareForUse()\l+ copy()\l+ getCLICreationString()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfacemoa_1_1options_1_1OptionHandler.html",tooltip="Interface representing an object that handles options or parameters."];
  Node5 -> Node7 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node8 -> Node3 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="classOptionNamesToPreparedObjects",arrowtail="open",fontname="Helvetica"];
  Node8 [label="{Map\< String, Object \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node9 -> Node3 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="options",arrowtail="open",fontname="Helvetica"];
  Node9 [label="{moa.options.Options\n|# optionList\l- serialVersionUID\l|+ addOption()\l+ numOptions()\l+ getOption()\l+ getOption()\l+ getOptionArray()\l+ removeOption()\l+ removeOption()\l+ removeAllOptions()\l+ resetToDefaults()\l+ setViaCLIString()\l+ getAsCLIString()\l+ getHelpString()\l+ getHelp()\l+ getDescription()\l# splitParameterFromRemainingOptions()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1options_1_1Options.html",tooltip="File option."];
  Node4 -> Node9 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node10 -> Node9 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="optionList",arrowtail="open",fontname="Helvetica"];
  Node10 [label="{List\< Option \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node11 -> Node2 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node11 [label="{moa.streams.InstanceStream\n||+ getHeader()\l+ estimatedRemainingInstances()\l+ hasMoreInstances()\l+ nextInstance()\l+ isRestartable()\l+ restart()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfacemoa_1_1streams_1_1InstanceStream.html",tooltip="Interface representing a data stream of instances."];
  Node5 -> Node11 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node12 -> Node2 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="decayThresholdOption",arrowtail="open",fontname="Helvetica"];
  Node12 [label="{moa.options.FloatOption\n|# currentVal\l# defaultVal\l# minVal\l# maxVal\l- serialVersionUID\l|+ FloatOption()\l+ FloatOption()\l+ setValue()\l+ getValue()\l+ getMinValue()\l+ getMaxValue()\l+ getDefaultCLIString()\l+ getValueAsCLIString()\l+ setValueViaCLIString()\l+ getEditComponent()\l+ cliStringToDouble()\l+ doubleToCLIString()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1options_1_1FloatOption.html",tooltip="Float option."];
  Node13 -> Node12 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node13 [label="{moa.options.AbstractOption\n|+ illegalNameCharacters\l# name\l# cliChar\l# purpose\l|+ AbstractOption()\l+ getName()\l+ getCLIChar()\l+ getPurpose()\l+ resetToDefault()\l+ getStateString()\l+ copy()\l+ getDescription()\l+ getEditComponent()\l+ nameIsLegal()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1options_1_1AbstractOption.html",tooltip="Abstract option."];
  Node4 -> Node13 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node14 -> Node13 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node14 [label="{moa.options.Option\n||+ getName()\l+ getCLIChar()\l+ getPurpose()\l+ getDefaultCLIString()\l+ setValueViaCLIString()\l+ getValueAsCLIString()\l+ resetToDefault()\l+ getStateString()\l+ copy()\l+ getEditComponent()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfacemoa_1_1options_1_1Option.html",tooltip="Interface representing an option or parameter."];
  Node5 -> Node14 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node15 -> Node2 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="evaluationFrequencyOption\nnumAttsOption\ndecayHorizonOption",arrowtail="open",fontname="Helvetica"];
  Node15 [label="{moa.options.IntOption\n|# currentVal\l# defaultVal\l# minVal\l# maxVal\l- serialVersionUID\l|+ IntOption()\l+ IntOption()\l+ setValue()\l+ getValue()\l+ getMinValue()\l+ getMaxValue()\l+ getDefaultCLIString()\l+ getValueAsCLIString()\l+ setValueViaCLIString()\l+ getEditComponent()\l+ cliStringToInt()\l+ intToCLIString()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1options_1_1IntOption.html",tooltip="Int option."];
  Node13 -> Node15 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node16 -> Node1 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="mergeClusterA\nmergeClusterB",arrowtail="open",fontname="Helvetica"];
  Node16 [label="{moa.streams.clustering.RandomRBFGeneratorEvents.GeneratorCluster\n|~ generator\l~ kill\l~ merging\l~ moveVector\l~ totalMovementSteps\l~ currentMovementSteps\l~ isSplitting\l~ points\l~ microClusters\l~ microClustersPoints\l~ microClustersDecay\l|+ GeneratorCluster()\l+ GeneratorCluster()\l+ getWorkID()\l~ setDesitnation()\l~ setMoveVector()\l- updateKernel()\l- addInstance()\l- move()\l- tryMerging()\l- splitKernel()\l- fadeOut()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1streams_1_1clustering_1_1RandomRBFGeneratorEvents_1_1GeneratorCluster.html"];
  Node17 -> Node16 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="microClusters",arrowtail="open",fontname="Helvetica"];
  Node17 [label="{ArrayList\< SphereCluster \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node18 -> Node16 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="generator",arrowtail="open",fontname="Helvetica"];
  Node18 [label="{moa.cluster.SphereCluster\n|- center\l- radius\l- weight\l- serialVersionUID\l|+ SphereCluster()\l+ SphereCluster()\l+ SphereCluster()\l+ SphereCluster()\l+ SphereCluster()\l+ overlapRadiusDegree()\l+ combine()\l+ merge()\l+ getCenter()\l+ setCenter()\l+ getRadius()\l+ setRadius()\l+ getWeight()\l+ setWeight()\l+ getInclusionProbability()\l+ getCenterDistance()\l+ getCenterDistance()\l+ getHullDistance()\l+ overlapSave()\l+ getDistanceVector()\l+ getDistanceVector()\l+ sample()\l# getClusterSpecificInfo()\l- distance()\l- distanceVector()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1cluster_1_1SphereCluster.html",tooltip="A simple implementation of the Cluster interface representing spherical clusters..."];
  Node19 -> Node18 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node19 [label="{moa.cluster.Cluster\n|- id\l- gtLabel\l- measure_values\l- serialVersionUID\l|+ Cluster()\l+ getCenter()\l+ getWeight()\l+ getInclusionProbability()\l+ getDescription()\l+ setId()\l+ getId()\l+ isGroundTruth()\l+ setGroundTruth()\l+ getGroundTruth()\l+ sample()\l+ setMeasureValue()\l+ setMeasureValue()\l+ getMeasureValue()\l+ getInfo()\l# getClusterSpecificInfo()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1cluster_1_1Cluster.html"];
  Node4 -> Node19 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node20 -> Node19 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="measure_values",arrowtail="open",fontname="Helvetica"];
  Node20 [label="{HashMap\< String, String \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node21 -> Node16 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="microClustersDecay",arrowtail="open",fontname="Helvetica"];
  Node21 [label="{ArrayList\< Integer \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node22 -> Node16 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="microClustersPoints",arrowtail="open",fontname="Helvetica"];
  Node22 [label="{ArrayList\< ArrayList\< DataPoint \> \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node23 -> Node16 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="points",arrowtail="open",fontname="Helvetica"];
  Node23 [label="{LinkedList\< DataPoint \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node24 -> Node1 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="kernels",arrowtail="open",fontname="Helvetica"];
  Node24 [label="{AutoExpandVector\< GeneratorCluster \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node12 -> Node1 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="densityRangeOption\nkernelRadiiRangeOption\nnoiseLevelOption\nkernelRadiiOption",arrowtail="open",fontname="Helvetica"];
  Node25 -> Node1 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="streamHeader",arrowtail="open",fontname="Helvetica"];
  Node25 [label="{moa.core.InstancesHeader\n|- serialVersionUID\l|+ InstancesHeader()\l+ add()\l+ readInstance()\l+ getClassNameString()\l+ getClassLabelString()\l+ getAttributeNameString()\l+ getNominalValueString()\l+ getNumericValueString()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1core_1_1InstancesHeader.html",tooltip="Class for storing the header or context of a data stream."];
  Node26 -> Node25 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node26 [label="{Instances\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node15 -> Node1 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="speedRangeOption\nnumClusterRangeOption\ninstanceRandomSeedOption\nmodelRandomSeedOption\neventFrequencyOption\nspeedOption\nnumClusterOption",arrowtail="open",fontname="Helvetica"];
  Node27 -> Node1 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="listeners",arrowtail="open",fontname="Helvetica"];
  Node27 [label="{Vector\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node28 -> Node1 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="eventMergeSplitOption\nnoiseInClusterOption\neventDeleteCreateOption",arrowtail="open",fontname="Helvetica"];
  Node28 [label="{moa.options.FlagOption\n|# isSet\l- serialVersionUID\l|+ FlagOption()\l+ setValue()\l+ set()\l+ unset()\l+ isSet()\l+ getDefaultCLIString()\l+ getValueAsCLIString()\l+ setValueViaCLIString()\l+ getStateString()\l+ getEditComponent()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1options_1_1FlagOption.html",tooltip="Flag option."];
  Node13 -> Node28 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node29 -> Node1 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="instanceRandom",arrowtail="open",fontname="Helvetica"];
  Node29 [label="{Random\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
}
