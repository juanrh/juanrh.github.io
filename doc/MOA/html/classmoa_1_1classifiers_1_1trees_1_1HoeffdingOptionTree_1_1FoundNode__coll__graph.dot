digraph G
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{moa.classifiers.trees.HoeffdingOptionTree.FoundNode\n|+ node\l+ parent\l+ parentBranch\l|+ FoundNode()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="node",arrowtail="open",fontname="Helvetica"];
  Node2 [label="{moa.classifiers.trees.HoeffdingOptionTree.Node\n|# observedClassDistribution\l- serialVersionUID\l|+ Node()\l+ calcByteSize()\l+ calcByteSizeIncludingSubtree()\l+ isLeaf()\l+ filterInstanceToLeaves()\l+ filterInstanceToLeaves()\l+ getObservedClassDistribution()\l+ getClassVotes()\l+ observedClassDistributionIsPure()\l+ describeSubtree()\l+ subtreeDepth()\l+ calculatePromise()\l+ getDescription()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1classifiers_1_1trees_1_1HoeffdingOptionTree_1_1Node.html"];
  Node3 -> Node2 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node3 [label="{moa.AbstractMOAObject\n||+ copy()\l+ measureByteSize()\l+ toString()\l+ copy()\l+ measureByteSize()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1AbstractMOAObject.html",tooltip="Abstract MOA Object."];
  Node4 -> Node3 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node4 [label="{moa.MOAObject\n||+ measureByteSize()\l+ copy()\l+ getDescription()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfacemoa_1_1MOAObject.html",tooltip="Interface implemented by classes in MOA, so that all are serializable, can produce..."];
  Node5 -> Node4 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node5 [label="{Serializable\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node6 -> Node2 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="observedClassDistribution",arrowtail="open",fontname="Helvetica"];
  Node6 [label="{moa.core.DoubleVector\n|# array\l- serialVersionUID\l|+ DoubleVector()\l+ DoubleVector()\l+ DoubleVector()\l+ numValues()\l+ setValue()\l+ addToValue()\l+ addValues()\l+ addValues()\l+ subtractValues()\l+ subtractValues()\l+ addToValues()\l+ scaleValues()\l+ getValue()\l+ sumOfValues()\l+ maxIndex()\l+ normalize()\l+ numNonZeroEntries()\l+ minWeight()\l+ getArrayCopy()\l+ getArrayRef()\l+ getSingleLineDescription()\l+ getSingleLineDescription()\l+ getDescription()\l# setArrayLength()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1core_1_1DoubleVector.html",tooltip="Vector of double numbers with some utilities."];
  Node3 -> Node6 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node7 -> Node1 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="parent",arrowtail="open",fontname="Helvetica"];
  Node7 [label="{moa.classifiers.trees.HoeffdingOptionTree.SplitNode\n|# splitTest\l# parent\l# nextOption\l# optionCount\l# children\l- serialVersionUID\l|+ calcByteSize()\l+ calcByteSizeIncludingSubtree()\l+ SplitNode()\l+ numChildren()\l+ setChild()\l+ getChild()\l+ instanceChildIndex()\l+ isLeaf()\l+ filterInstanceToLeaves()\l+ describeSubtree()\l+ subtreeDepth()\l+ computeMeritOfExistingSplit()\l+ updateOptionCount()\l+ updateOptionCountBelow()\l+ getHeadOptionCount()\l- killOptionLeaf()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1classifiers_1_1trees_1_1HoeffdingOptionTree_1_1SplitNode.html"];
  Node2 -> Node7 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node2 -> Node7 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="nextOption",arrowtail="open",fontname="Helvetica"];
  Node8 -> Node7 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="splitTest",arrowtail="open",fontname="Helvetica"];
  Node8 [label="{moa.classifiers.core.conditionaltests.InstanceConditionalTest\n||+ branchForInstance()\l+ resultKnownForInstance()\l+ maxBranches()\l+ describeConditionForBranch()\l+ getAttsTestDependsOn()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1classifiers_1_1core_1_1conditionaltests_1_1InstanceConditionalTest.html",tooltip="Abstract conditional test for instances to use to split nodes in Hoeffding trees..."];
  Node3 -> Node8 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node7 -> Node7 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="parent",arrowtail="open",fontname="Helvetica"];
  Node9 -> Node7 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="children",arrowtail="open",fontname="Helvetica"];
  Node9 [label="{AutoExpandVector\< Node \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
}
