digraph G
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{moa.classifiers.core.driftdetection.ADWINChangeDetector\n|+ deltaAdwinOption\l# adwin\l|+ input()\l+ resetLearning()\l+ getDescription()\l# prepareForUseImpl()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node2 [label="{moa.classifiers.core.driftdetection.AbstractChangeDetector\n|# isChangeDetected\l# isWarningZone\l# estimation\l# delay\l# isInitialized\l|+ resetLearning()\l+ input()\l+ getChange()\l+ getWarningZone()\l+ getEstimation()\l+ getDelay()\l+ getOutput()\l+ getDescription()\l+ copy()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1classifiers_1_1core_1_1driftdetection_1_1AbstractChangeDetector.html",tooltip="Abstract Change Detector."];
  Node3 -> Node2 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node3 [label="{moa.options.AbstractOptionHandler\n|# options\l# classOptionNamesToPreparedObjects\l- serialVersionUID\l|+ getPurposeString()\l+ getOptions()\l+ prepareForUse()\l+ prepareForUse()\l+ getCLICreationString()\l+ copy()\l# prepareForUseImpl()\l# discoverOptionsViaReflection()\l# prepareClassOptions()\l# getPreparedClassOption()\l# getPreparedClassOption()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1options_1_1AbstractOptionHandler.html",tooltip="Abstract Option Handler."];
  Node4 -> Node3 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node4 [label="{moa.AbstractMOAObject\n||+ copy()\l+ measureByteSize()\l+ toString()\l+ copy()\l+ measureByteSize()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1AbstractMOAObject.html",tooltip="Abstract MOA Object."];
  Node5 -> Node4 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node5 [label="{moa.MOAObject\n||+ measureByteSize()\l+ copy()\l+ getDescription()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfacemoa_1_1MOAObject.html",tooltip="Interface implemented by classes in MOA, so that all are serializable, can produce..."];
  Node6 -> Node5 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node6 [label="{Serializable\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node7 -> Node3 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node7 [label="{moa.options.OptionHandler\n||+ getPurposeString()\l+ getOptions()\l+ prepareForUse()\l+ prepareForUse()\l+ copy()\l+ getCLICreationString()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfacemoa_1_1options_1_1OptionHandler.html",tooltip="Interface representing an object that handles options or parameters."];
  Node5 -> Node7 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node8 -> Node3 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="classOptionNamesToPreparedObjects",arrowtail="open",fontname="Helvetica"];
  Node8 [label="{Map\< String, Object \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node9 -> Node3 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="options",arrowtail="open",fontname="Helvetica"];
  Node9 [label="{moa.options.Options\n|# optionList\l- serialVersionUID\l|+ addOption()\l+ numOptions()\l+ getOption()\l+ getOption()\l+ getOptionArray()\l+ removeOption()\l+ removeOption()\l+ removeAllOptions()\l+ resetToDefaults()\l+ setViaCLIString()\l+ getAsCLIString()\l+ getHelpString()\l+ getHelp()\l+ getDescription()\l# splitParameterFromRemainingOptions()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1options_1_1Options.html",tooltip="File option."];
  Node4 -> Node9 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node10 -> Node9 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="optionList",arrowtail="open",fontname="Helvetica"];
  Node10 [label="{List\< Option \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node11 -> Node2 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node11 [label="{moa.classifiers.core.driftdetection.ChangeDetector\n||+ resetLearning()\l+ input()\l+ getChange()\l+ getWarningZone()\l+ getEstimation()\l+ getDelay()\l+ getOutput()\l+ getDescription()\l+ copy()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfacemoa_1_1classifiers_1_1core_1_1driftdetection_1_1ChangeDetector.html",tooltip="Change Detector interface to implement methods that detects change."];
  Node7 -> Node11 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node12 -> Node1 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="deltaAdwinOption",arrowtail="open",fontname="Helvetica"];
  Node12 [label="{moa.options.FloatOption\n|# currentVal\l# defaultVal\l# minVal\l# maxVal\l- serialVersionUID\l|+ FloatOption()\l+ FloatOption()\l+ setValue()\l+ getValue()\l+ getMinValue()\l+ getMaxValue()\l+ getDefaultCLIString()\l+ getValueAsCLIString()\l+ setValueViaCLIString()\l+ getEditComponent()\l+ cliStringToDouble()\l+ doubleToCLIString()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1options_1_1FloatOption.html",tooltip="Float option."];
  Node13 -> Node12 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node13 [label="{moa.options.AbstractOption\n|+ illegalNameCharacters\l# name\l# cliChar\l# purpose\l|+ AbstractOption()\l+ getName()\l+ getCLIChar()\l+ getPurpose()\l+ resetToDefault()\l+ getStateString()\l+ copy()\l+ getDescription()\l+ getEditComponent()\l+ nameIsLegal()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1options_1_1AbstractOption.html",tooltip="Abstract option."];
  Node4 -> Node13 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node14 -> Node13 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node14 [label="{moa.options.Option\n||+ getName()\l+ getCLIChar()\l+ getPurpose()\l+ getDefaultCLIString()\l+ setValueViaCLIString()\l+ getValueAsCLIString()\l+ resetToDefault()\l+ getStateString()\l+ copy()\l+ getEditComponent()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfacemoa_1_1options_1_1Option.html",tooltip="Interface representing an option or parameter."];
  Node5 -> Node14 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node15 -> Node1 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="adwin",arrowtail="open",fontname="Helvetica"];
  Node15 [label="{moa.classifiers.core.driftdetection.ADWIN\n|+ DELTA\l+ MAXBUCKETS\l- mdbldelta\l- mintTime\l- mintClock\l- mdblWidth\l- lastBucketRow\l- TOTAL\l- VARIANCE\l- WIDTH\l- BucketNumber\l- Detect\l- numberDetections\l- DetectTwice\l- blnBucketDeleted\l- BucketNumberMAX\l- mintMinWinLength\l- listRowBuckets\l- mintMinimLongitudWindow\l|+ getChange()\l+ resetChange()\l+ getBucketsUsed()\l+ getWidth()\l+ setClock()\l+ getClock()\l+ getWarning()\l+ getDetect()\l+ getNumberDetections()\l+ getTotal()\l+ getEstimation()\l+ getVariance()\l+ getWidthT()\l+ deleteElement()\l+ compressBuckets()\l+ setInput()\l+ setInput()\l+ ADWIN()\l+ ADWIN()\l+ ADWIN()\l+ getEstimatorInfo()\l+ setW()\l+ getDescription()\l- initBuckets()\l- insertElement()\l- insertElementBucket()\l- bucketSize()\l- blnCutexpression()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1classifiers_1_1core_1_1driftdetection_1_1ADWIN.html",tooltip="ADaptive sliding WINdow method."];
  Node4 -> Node15 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node16 -> Node15 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="listRowBuckets",arrowtail="open",fontname="Helvetica"];
  Node16 [label="{moa.classifiers.core.driftdetection.ADWIN.List\n|# count\l# head\l# tail\l|+ List()\l+ size()\l+ head()\l+ tail()\l+ isEmpty()\l+ clear()\l+ addToHead()\l+ removeFromHead()\l+ addToTail()\l+ removeFromTail()\l+ getDescription()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1classifiers_1_1core_1_1driftdetection_1_1ADWIN_1_1List.html"];
  Node4 -> Node16 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node17 -> Node16 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="head\ntail",arrowtail="open",fontname="Helvetica"];
  Node17 [label="{moa.classifiers.core.driftdetection.ADWIN.ListItem\n|# next\l# previous\l# bucketSizeRow\l# MAXBUCKETS\l# bucketTotal\l# bucketVariance\l|+ ListItem()\l+ clear()\l+ ListItem()\l+ insertBucket()\l+ RemoveBucket()\l+ compressBucketsRow()\l+ previous()\l+ setPrevious()\l+ next()\l+ setNext()\l+ Total()\l+ Variance()\l+ setTotal()\l+ setVariance()\l+ getDescription()\l- clearBucket()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1classifiers_1_1core_1_1driftdetection_1_1ADWIN_1_1ListItem.html"];
  Node4 -> Node17 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node17 -> Node17 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="previous\nnext",arrowtail="open",fontname="Helvetica"];
}
