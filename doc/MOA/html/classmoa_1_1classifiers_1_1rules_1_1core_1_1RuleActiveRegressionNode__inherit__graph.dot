digraph G
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{moa.classifiers.rules.core.RuleActiveRegressionNode\n|# perceptron\l# targetMean\l- serialVersionUID\l|+ getPerceptron()\l+ setPerceptron()\l+ getTargetMean()\l+ setTargetMean()\l+ RuleActiveRegressionNode()\l+ RuleActiveRegressionNode()\l+ RuleActiveRegressionNode()\l+ updateStatistics()\l+ getPrediction()\l+ getNormalizedPrediction()\l+ getLearnerToUse()\l+ computeSD()\l+ computeError()\l+ isAnomaly()\l+ initialize()\l+ getSimplePrediction()\l+ tryToExpand()\l+ learnFromInstance()\l+ getBestSplitSuggestions()\l+ getWeightSeen()\l+ getCurrentError()\l# debuganomaly()\l- normalize()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node2 [label="{moa.classifiers.rules.core.RuleActiveLearningNode\n|# pageHinckleyTest\l# predictionFunction\l# changeDetection\l# owner\l# nodeStatistics\l# amRules\l# bestSuggestion\l# splitIndex\l# statisticsNewRuleActiveLearningNode\l# statisticsBranchSplit\l# statisticsOtherBranchSplit\l- serialVersionUID\l|+ RuleActiveLearningNode()\l+ RuleActiveLearningNode()\l+ RuleActiveLearningNode()\l+ learnFromInstance()\l+ learnFromInstance()\l+ updateStatistics()\l+ getAttributeObservers()\l+ getPrediction()\l+ getPrediction()\l+ getLearnerToUse()\l+ computeError()\l+ updatePageHinckleyTest()\l+ getInstancesSeen()\l+ isAnomaly()\l+ computeProbability()\l+ getSplitIndex()\l+ setSplitIndex()\l+ getBestSuggestion()\l+ setBestSuggestion()\l+ getStatisticsBranchSplit()\l+ setStatisticsBranchSplit()\l+ getStatisticsNewRuleActiveLearningNode()\l+ setStatisticsNewRuleActiveLearningNode()\l+ getStatisticsOtherBranchSplit()\l+ setStatisticsOtherBranchSplit()\l+ tryToExpand()\l+ initialize()\l+ getSimplePrediction()\l+ getNodeStatistics()\l+ updateChangeDetection()\l+ getCurrentError()\l+ computeHoeffdingBound()\l# newNumericClassObserver()\l# debug()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1classifiers_1_1rules_1_1core_1_1RuleActiveLearningNode.html",tooltip="A modified ActiveLearningNode that uses a Perceptron as the leaf node model, and..."];
  Node3 -> Node2 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node3 [label="{moa.classifiers.trees.HoeffdingTree.ActiveLearningNode\n|# weightSeenAtLastSplitEvaluation\l# attributeObservers\l# isInitialized\l- serialVersionUID\l|+ ActiveLearningNode()\l+ calcByteSize()\l+ learnFromInstance()\l+ getWeightSeen()\l+ getWeightSeenAtLastSplitEvaluation()\l+ setWeightSeenAtLastSplitEvaluation()\l+ getBestSplitSuggestions()\l+ disableAttribute()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1classifiers_1_1trees_1_1HoeffdingTree_1_1ActiveLearningNode.html"];
  Node4 -> Node3 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node4 [label="{moa.classifiers.trees.HoeffdingTree.LearningNode\n|- serialVersionUID\l|+ LearningNode()\l+ learnFromInstance()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1classifiers_1_1trees_1_1HoeffdingTree_1_1LearningNode.html"];
  Node5 -> Node4 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node5 [label="{moa.classifiers.trees.HoeffdingTree.Node\n|# observedClassDistribution\l- serialVersionUID\l|+ Node()\l+ calcByteSize()\l+ calcByteSizeIncludingSubtree()\l+ isLeaf()\l+ filterInstanceToLeaf()\l+ getObservedClassDistribution()\l+ getClassVotes()\l+ observedClassDistributionIsPure()\l+ describeSubtree()\l+ subtreeDepth()\l+ calculatePromise()\l+ getDescription()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1classifiers_1_1trees_1_1HoeffdingTree_1_1Node.html"];
  Node6 -> Node5 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node6 [label="{moa.AbstractMOAObject\n||+ copy()\l+ measureByteSize()\l+ toString()\l+ copy()\l+ measureByteSize()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1AbstractMOAObject.html",tooltip="Abstract MOA Object."];
  Node7 -> Node6 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node7 [label="{moa.MOAObject\n||+ measureByteSize()\l+ copy()\l+ getDescription()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfacemoa_1_1MOAObject.html",tooltip="Interface implemented by classes in MOA, so that all are serializable, can produce..."];
  Node8 -> Node7 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node8 [label="{Serializable\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
}
