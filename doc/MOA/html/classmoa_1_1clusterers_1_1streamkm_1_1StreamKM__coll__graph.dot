digraph G
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{moa.clusterers.streamkm.StreamKM\n|+ sizeCoresetOption\l+ numClustersOption\l+ widthOption\l+ randomSeedOption\l# clustererRandom\l# centresStreamingCoreset\l# numberInstances\l# dimension\l# length\l# numberOfCentres\l# coresetsize\l# manager\l# initialized\l- THRESHOLD\l|+ resetLearningImpl()\l+ trainOnInstanceImpl()\l+ getModelDescription()\l+ isRandomizable()\l+ getVotesForInstance()\l+ getClusteringResult()\l+ lloydPlusPlus()\l+ targetFunctionValue()\l# getModelMeasurementsImpl()\l- chooseRandomCentres()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node2 [label="{moa.clusterers.AbstractClusterer\n|+ evaluateMicroClusteringOption\l# modelContext\l# trainingWeightSeenByModel\l# randomSeed\l# randomSeedOption\l# clustererRandom\l# clustering\l|+ getPurposeString()\l+ AbstractClusterer()\l+ prepareForUseImpl()\l+ setModelContext()\l+ getModelContext()\l+ setRandomSeed()\l+ trainingHasStarted()\l+ trainingWeightSeenByModel()\l+ resetLearning()\l+ trainOnInstance()\l+ getModelMeasurements()\l+ getDescription()\l+ getSubClusterers()\l+ copy()\l+ getClassNameString()\l+ getClassLabelString()\l+ getAttributeNameString()\l+ getNominalValueString()\l+ getAWTRenderer()\l+ resetLearningImpl()\l+ trainOnInstanceImpl()\l+ getModelDescription()\l+ implementsMicroClusterer()\l+ keepClassLabel()\l+ getMicroClusteringResult()\l+ contextIsCompatible()\l# getModelMeasurementsImpl()\l# modelAttIndexToInstanceAttIndex()\l# modelAttIndexToInstanceAttIndex()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1clusterers_1_1AbstractClusterer.html"];
  Node3 -> Node2 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node3 [label="{moa.options.AbstractOptionHandler\n|# options\l# classOptionNamesToPreparedObjects\l- serialVersionUID\l|+ getPurposeString()\l+ getOptions()\l+ prepareForUse()\l+ prepareForUse()\l+ getCLICreationString()\l+ copy()\l# prepareForUseImpl()\l# discoverOptionsViaReflection()\l# prepareClassOptions()\l# getPreparedClassOption()\l# getPreparedClassOption()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1options_1_1AbstractOptionHandler.html",tooltip="Abstract Option Handler."];
  Node4 -> Node3 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node4 [label="{moa.AbstractMOAObject\n||+ copy()\l+ measureByteSize()\l+ toString()\l+ copy()\l+ measureByteSize()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1AbstractMOAObject.html",tooltip="Abstract MOA Object."];
  Node5 -> Node4 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node5 [label="{moa.MOAObject\n||+ measureByteSize()\l+ copy()\l+ getDescription()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfacemoa_1_1MOAObject.html",tooltip="Interface implemented by classes in MOA, so that all are serializable, can produce..."];
  Node6 -> Node5 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node6 [label="{Serializable\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node7 -> Node3 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node7 [label="{moa.options.OptionHandler\n||+ getPurposeString()\l+ getOptions()\l+ prepareForUse()\l+ prepareForUse()\l+ copy()\l+ getCLICreationString()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfacemoa_1_1options_1_1OptionHandler.html",tooltip="Interface representing an object that handles options or parameters."];
  Node5 -> Node7 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node8 -> Node3 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="classOptionNamesToPreparedObjects",arrowtail="open",fontname="Helvetica"];
  Node8 [label="{Map\< String, Object \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node9 -> Node3 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="options",arrowtail="open",fontname="Helvetica"];
  Node9 [label="{moa.options.Options\n|# optionList\l- serialVersionUID\l|+ addOption()\l+ numOptions()\l+ getOption()\l+ getOption()\l+ getOptionArray()\l+ removeOption()\l+ removeOption()\l+ removeAllOptions()\l+ resetToDefaults()\l+ setViaCLIString()\l+ getAsCLIString()\l+ getHelpString()\l+ getHelp()\l+ getDescription()\l# splitParameterFromRemainingOptions()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1options_1_1Options.html",tooltip="File option."];
  Node4 -> Node9 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node10 -> Node9 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="optionList",arrowtail="open",fontname="Helvetica"];
  Node10 [label="{List\< Option \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node11 -> Node2 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node11 [label="{moa.clusterers.Clusterer\n||+ setModelContext()\l+ getModelContext()\l+ isRandomizable()\l+ setRandomSeed()\l+ trainingHasStarted()\l+ trainingWeightSeenByModel()\l+ resetLearning()\l+ trainOnInstance()\l+ getVotesForInstance()\l+ getModelMeasurements()\l+ getSubClusterers()\l+ copy()\l+ getClusteringResult()\l+ implementsMicroClusterer()\l+ getMicroClusteringResult()\l+ keepClassLabel()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfacemoa_1_1clusterers_1_1Clusterer.html"];
  Node5 -> Node11 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node7 -> Node11 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node12 -> Node11 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node12 [label="{moa.gui.AWTRenderable\n||+ getAWTRenderer()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfacemoa_1_1gui_1_1AWTRenderable.html",tooltip="Interface representing a component that is renderable."];
  Node13 -> Node2 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="clustering",arrowtail="open",fontname="Helvetica"];
  Node13 [label="{moa.cluster.Clustering\n|- clusters\l|+ Clustering()\l+ Clustering()\l+ Clustering()\l+ Clustering()\l+ Clustering()\l+ add()\l+ remove()\l+ get()\l+ getClustering()\l+ getClusteringCopy()\l+ size()\l+ dimension()\l+ getDescription()\l+ getMaxInclusionProbability()\l+ classValues()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1cluster_1_1Clustering.html"];
  Node4 -> Node13 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node14 -> Node13 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="clusters",arrowtail="open",fontname="Helvetica"];
  Node14 [label="{AutoExpandVector\< Cluster \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node15 -> Node2 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="randomSeedOption",arrowtail="open",fontname="Helvetica"];
  Node15 [label="{moa.options.IntOption\n|# currentVal\l# defaultVal\l# minVal\l# maxVal\l- serialVersionUID\l|+ IntOption()\l+ IntOption()\l+ setValue()\l+ getValue()\l+ getMinValue()\l+ getMaxValue()\l+ getDefaultCLIString()\l+ getValueAsCLIString()\l+ setValueViaCLIString()\l+ getEditComponent()\l+ cliStringToInt()\l+ intToCLIString()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1options_1_1IntOption.html",tooltip="Int option."];
  Node16 -> Node15 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node16 [label="{moa.options.AbstractOption\n|+ illegalNameCharacters\l# name\l# cliChar\l# purpose\l|+ AbstractOption()\l+ getName()\l+ getCLIChar()\l+ getPurpose()\l+ resetToDefault()\l+ getStateString()\l+ copy()\l+ getDescription()\l+ getEditComponent()\l+ nameIsLegal()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1options_1_1AbstractOption.html",tooltip="Abstract option."];
  Node4 -> Node16 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node17 -> Node16 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node17 [label="{moa.options.Option\n||+ getName()\l+ getCLIChar()\l+ getPurpose()\l+ getDefaultCLIString()\l+ setValueViaCLIString()\l+ getValueAsCLIString()\l+ resetToDefault()\l+ getStateString()\l+ copy()\l+ getEditComponent()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfacemoa_1_1options_1_1Option.html",tooltip="Interface representing an option or parameter."];
  Node5 -> Node17 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node18 -> Node2 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="modelContext",arrowtail="open",fontname="Helvetica"];
  Node18 [label="{moa.core.InstancesHeader\n|- serialVersionUID\l|+ InstancesHeader()\l+ add()\l+ readInstance()\l+ getClassNameString()\l+ getClassLabelString()\l+ getAttributeNameString()\l+ getNominalValueString()\l+ getNumericValueString()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1core_1_1InstancesHeader.html",tooltip="Class for storing the header or context of a data stream."];
  Node19 -> Node18 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node19 [label="{Instances\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node20 -> Node2 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="evaluateMicroClusteringOption",arrowtail="open",fontname="Helvetica"];
  Node20 [label="{moa.options.FlagOption\n|# isSet\l- serialVersionUID\l|+ FlagOption()\l+ setValue()\l+ set()\l+ unset()\l+ isSet()\l+ getDefaultCLIString()\l+ getValueAsCLIString()\l+ setValueViaCLIString()\l+ getStateString()\l+ getEditComponent()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1options_1_1FlagOption.html",tooltip="Flag option."];
  Node16 -> Node20 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node21 -> Node2 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="clustererRandom",arrowtail="open",fontname="Helvetica"];
  Node21 [label="{Random\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node22 -> Node1 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="clustererRandom",arrowtail="open",fontname="Helvetica"];
  Node22 [label="{moa.clusterers.streamkm.MTRandom\n|- mt\l- mti\l- compat\l- ibuf\l- serialVersionUID\l- UPPER_MASK\l- LOWER_MASK\l- N\l- M\l- MAGIC\l- MAGIC_FACTOR1\l- MAGIC_FACTOR2\l- MAGIC_FACTOR3\l- MAGIC_MASK1\l- MAGIC_MASK2\l- MAGIC_SEED\l- DEFAULT_SEED\l|+ MTRandom()\l+ MTRandom()\l+ MTRandom()\l+ MTRandom()\l+ MTRandom()\l+ setSeed()\l+ setSeed()\l+ setSeed()\l+ pack()\l# next()\l- setSeed()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1clusterers_1_1streamkm_1_1MTRandom.html"];
  Node21 -> Node22 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node15 -> Node1 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="widthOption\nrandomSeedOption\nsizeCoresetOption\nnumClustersOption",arrowtail="open",fontname="Helvetica"];
  Node23 -> Node1 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="manager",arrowtail="open",fontname="Helvetica"];
  Node23 [label="{moa.clusterers.streamkm.BucketManager\n|# numberOfBuckets\l# maxBucketsize\l# buckets\l# clustererRandom\l# treeCoreset\l|+ BucketManager()\l~ insertPoint()\l~ getCoresetFromManager()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1clusterers_1_1streamkm_1_1BucketManager.html"];
  Node22 -> Node23 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="clustererRandom",arrowtail="open",fontname="Helvetica"];
  Node24 -> Node23 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="treeCoreset",arrowtail="open",fontname="Helvetica"];
  Node24 [label="{moa.clusterers.streamkm.TreeCoreset\n||~ treeNodeSplitCost()\l~ treeNodeCostOfPoint()\l~ isLeaf()\l~ selectNode()\l~ chooseCentre()\l~ determineClosestCentre()\l~ split()\l~ treeFinished()\l~ freeTree()\l~ unionTreeCoreset()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1clusterers_1_1streamkm_1_1TreeCoreset.html"];
  Node25 -> Node23 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="buckets",arrowtail="open",fontname="Helvetica"];
  Node25 [label="{moa.clusterers.streamkm.BucketManager.Bucket\n|~ cursize\l~ points\l~ spillover\l|+ Bucket()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1clusterers_1_1streamkm_1_1BucketManager_1_1Bucket.html"];
  Node26 -> Node25 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="points\nspillover",arrowtail="open",fontname="Helvetica"];
  Node26 [label="{moa.clusterers.streamkm.Point\n|~ dimension\l~ weight\l~ squareSum\l~ coordinates\l~ curCost\l~ centreIndex\l~ id\l~ cl\l|+ Point()\l+ Point()\l+ clone()\l+ toCluster()\l+ costOfPoint()\l+ determineClusterCentreKMeans()\l+ costOfPointToCenter()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1clusterers_1_1streamkm_1_1Point.html"];
  Node26 -> Node1 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="centresStreamingCoreset",arrowtail="open",fontname="Helvetica"];
}
