digraph G
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{moa.clusterers.outliers.AnyOut.AnyOut\n|- FIRST_OBJ_ID\l- minDepth\l- maxDepth\l- anyout\l- idCounter\l- windowSize\l- objects\l- trainingSet\l- trainingCount\l- trainingSetSize\l- truePositive\l- falsePositive\l- totalOutliers\l- outlierClass\l- serialVersionUID\l|+ AnyOut()\l+ resetLearningImpl()\l+ getPurposeString()\l+ getOptions()\l+ getObjectInfo()\l+ getStatistics()\l# Init()\l# ProcessNewStreamObj()\l# IsNodeIdInWin()\l- getWindowEnd()\l- getWindowStart()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node2 [label="{moa.clusterers.outliers.MyBaseOutlierDetector\n|+ windowSizeOption\l+ outlierNotifier\l+ bStopAlgorithm\l# random\l# iMaxMemUsage\l# nRangeQueriesExecuted\l# nTotalRunTime\l# nTimePerObj\l# myProgressInfo\l# myOut\l# bTrace\l# bShowProgress\l- myClusters\l- outliersFound\l- m_timePreObjSum\l- nProcessed\l- _msPrev\l- _msNow\l- m_timePreObjInterval\l|+ getTimePerObj()\l+ getObjectInfo()\l+ getStatistics()\l+ getInstanceValues()\l+ PrintInstance()\l+ resetLearningImpl()\l+ trainOnInstanceImpl()\l+ processNewInstanceImpl()\l+ PrintOutliers()\l+ GetOutliersFound()\l+ getClusteringResult()\l+ getOutliersResult()\l+ implementsMicroClusterer()\l+ getMicroClusteringResult()\l+ getModelDescription()\l+ isRandomizable()\l+ keepClassLabel()\l+ getVotesForInstance()\l+ SetShowProgress()\l+ SetTrace()\l+ SetProgressInterval()\l+ SetMessagePrinter()\l+ SetUserInfo()\l# UpdateMaxMemUsage()\l# Init()\l# ProcessNewStreamObj()\l# IsNodeIdInWin()\l# AddOutlier()\l# RemoveExpiredOutlier()\l# RemoveOutlier()\l# getModelMeasurementsImpl()\l# ShowProgress()\l# ShowProgress()\l# Println()\l# Print()\l# Printf()\l# GetMemoryUsage()\l- ShowTimePerObj()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1clusterers_1_1outliers_1_1MyBaseOutlierDetector.html"];
  Node3 -> Node2 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node3 [label="{moa.clusterers.AbstractClusterer\n|+ evaluateMicroClusteringOption\l# modelContext\l# trainingWeightSeenByModel\l# randomSeed\l# randomSeedOption\l# clustererRandom\l# clustering\l|+ getPurposeString()\l+ AbstractClusterer()\l+ prepareForUseImpl()\l+ setModelContext()\l+ getModelContext()\l+ setRandomSeed()\l+ trainingHasStarted()\l+ trainingWeightSeenByModel()\l+ resetLearning()\l+ trainOnInstance()\l+ getModelMeasurements()\l+ getDescription()\l+ getSubClusterers()\l+ copy()\l+ getClassNameString()\l+ getClassLabelString()\l+ getAttributeNameString()\l+ getNominalValueString()\l+ getAWTRenderer()\l+ resetLearningImpl()\l+ trainOnInstanceImpl()\l+ getModelDescription()\l+ implementsMicroClusterer()\l+ keepClassLabel()\l+ getMicroClusteringResult()\l+ contextIsCompatible()\l# getModelMeasurementsImpl()\l# modelAttIndexToInstanceAttIndex()\l# modelAttIndexToInstanceAttIndex()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1clusterers_1_1AbstractClusterer.html"];
  Node4 -> Node3 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node4 [label="{moa.options.AbstractOptionHandler\n|# options\l# classOptionNamesToPreparedObjects\l- serialVersionUID\l|+ getPurposeString()\l+ getOptions()\l+ prepareForUse()\l+ prepareForUse()\l+ getCLICreationString()\l+ copy()\l# prepareForUseImpl()\l# discoverOptionsViaReflection()\l# prepareClassOptions()\l# getPreparedClassOption()\l# getPreparedClassOption()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1options_1_1AbstractOptionHandler.html",tooltip="Abstract Option Handler."];
  Node5 -> Node4 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node5 [label="{moa.AbstractMOAObject\n||+ copy()\l+ measureByteSize()\l+ toString()\l+ copy()\l+ measureByteSize()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1AbstractMOAObject.html",tooltip="Abstract MOA Object."];
  Node6 -> Node5 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node6 [label="{moa.MOAObject\n||+ measureByteSize()\l+ copy()\l+ getDescription()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfacemoa_1_1MOAObject.html",tooltip="Interface implemented by classes in MOA, so that all are serializable, can produce..."];
  Node7 -> Node6 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node7 [label="{Serializable\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node8 -> Node4 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node8 [label="{moa.options.OptionHandler\n||+ getPurposeString()\l+ getOptions()\l+ prepareForUse()\l+ prepareForUse()\l+ copy()\l+ getCLICreationString()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfacemoa_1_1options_1_1OptionHandler.html",tooltip="Interface representing an object that handles options or parameters."];
  Node6 -> Node8 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node9 -> Node4 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="classOptionNamesToPreparedObjects",arrowtail="open",fontname="Helvetica"];
  Node9 [label="{Map\< String, Object \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node10 -> Node4 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="options",arrowtail="open",fontname="Helvetica"];
  Node10 [label="{moa.options.Options\n|# optionList\l- serialVersionUID\l|+ addOption()\l+ numOptions()\l+ getOption()\l+ getOption()\l+ getOptionArray()\l+ removeOption()\l+ removeOption()\l+ removeAllOptions()\l+ resetToDefaults()\l+ setViaCLIString()\l+ getAsCLIString()\l+ getHelpString()\l+ getHelp()\l+ getDescription()\l# splitParameterFromRemainingOptions()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1options_1_1Options.html",tooltip="File option."];
  Node5 -> Node10 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node11 -> Node10 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="optionList",arrowtail="open",fontname="Helvetica"];
  Node11 [label="{List\< Option \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node12 -> Node3 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node12 [label="{moa.clusterers.Clusterer\n||+ setModelContext()\l+ getModelContext()\l+ isRandomizable()\l+ setRandomSeed()\l+ trainingHasStarted()\l+ trainingWeightSeenByModel()\l+ resetLearning()\l+ trainOnInstance()\l+ getVotesForInstance()\l+ getModelMeasurements()\l+ getSubClusterers()\l+ copy()\l+ getClusteringResult()\l+ implementsMicroClusterer()\l+ getMicroClusteringResult()\l+ keepClassLabel()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfacemoa_1_1clusterers_1_1Clusterer.html"];
  Node6 -> Node12 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node8 -> Node12 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node13 -> Node12 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node13 [label="{moa.gui.AWTRenderable\n||+ getAWTRenderer()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfacemoa_1_1gui_1_1AWTRenderable.html",tooltip="Interface representing a component that is renderable."];
  Node14 -> Node3 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="clustering",arrowtail="open",fontname="Helvetica"];
  Node14 [label="{moa.cluster.Clustering\n|- clusters\l|+ Clustering()\l+ Clustering()\l+ Clustering()\l+ Clustering()\l+ Clustering()\l+ add()\l+ remove()\l+ get()\l+ getClustering()\l+ getClusteringCopy()\l+ size()\l+ dimension()\l+ getDescription()\l+ getMaxInclusionProbability()\l+ classValues()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1cluster_1_1Clustering.html"];
  Node5 -> Node14 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node15 -> Node14 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="clusters",arrowtail="open",fontname="Helvetica"];
  Node15 [label="{AutoExpandVector\< Cluster \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node16 -> Node3 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="randomSeedOption",arrowtail="open",fontname="Helvetica"];
  Node16 [label="{moa.options.IntOption\n|# currentVal\l# defaultVal\l# minVal\l# maxVal\l- serialVersionUID\l|+ IntOption()\l+ IntOption()\l+ setValue()\l+ getValue()\l+ getMinValue()\l+ getMaxValue()\l+ getDefaultCLIString()\l+ getValueAsCLIString()\l+ setValueViaCLIString()\l+ getEditComponent()\l+ cliStringToInt()\l+ intToCLIString()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1options_1_1IntOption.html",tooltip="Int option."];
  Node17 -> Node16 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node17 [label="{moa.options.AbstractOption\n|+ illegalNameCharacters\l# name\l# cliChar\l# purpose\l|+ AbstractOption()\l+ getName()\l+ getCLIChar()\l+ getPurpose()\l+ resetToDefault()\l+ getStateString()\l+ copy()\l+ getDescription()\l+ getEditComponent()\l+ nameIsLegal()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1options_1_1AbstractOption.html",tooltip="Abstract option."];
  Node5 -> Node17 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node18 -> Node17 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node18 [label="{moa.options.Option\n||+ getName()\l+ getCLIChar()\l+ getPurpose()\l+ getDefaultCLIString()\l+ setValueViaCLIString()\l+ getValueAsCLIString()\l+ resetToDefault()\l+ getStateString()\l+ copy()\l+ getEditComponent()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfacemoa_1_1options_1_1Option.html",tooltip="Interface representing an option or parameter."];
  Node6 -> Node18 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node19 -> Node3 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="modelContext",arrowtail="open",fontname="Helvetica"];
  Node19 [label="{moa.core.InstancesHeader\n|- serialVersionUID\l|+ InstancesHeader()\l+ add()\l+ readInstance()\l+ getClassNameString()\l+ getClassLabelString()\l+ getAttributeNameString()\l+ getNominalValueString()\l+ getNumericValueString()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1core_1_1InstancesHeader.html",tooltip="Class for storing the header or context of a data stream."];
  Node20 -> Node19 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node20 [label="{Instances\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node21 -> Node3 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="evaluateMicroClusteringOption",arrowtail="open",fontname="Helvetica"];
  Node21 [label="{moa.options.FlagOption\n|# isSet\l- serialVersionUID\l|+ FlagOption()\l+ setValue()\l+ set()\l+ unset()\l+ isSet()\l+ getDefaultCLIString()\l+ getValueAsCLIString()\l+ setValueViaCLIString()\l+ getStateString()\l+ getEditComponent()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1options_1_1FlagOption.html",tooltip="Flag option."];
  Node17 -> Node21 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node22 -> Node3 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="clustererRandom",arrowtail="open",fontname="Helvetica"];
  Node22 [label="{Random\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node23 -> Node2 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="outliersFound",arrowtail="open",fontname="Helvetica"];
  Node23 [label="{TreeSet\< Outlier \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node24 -> Node2 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="myOut",arrowtail="open",fontname="Helvetica"];
  Node24 [label="{moa.clusterers.outliers.MyBaseOutlierDetector.PrintMsg\n||+ print()\l+ println()\l+ printf()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfacemoa_1_1clusterers_1_1outliers_1_1MyBaseOutlierDetector_1_1PrintMsg.html"];
  Node14 -> Node2 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="myClusters",arrowtail="open",fontname="Helvetica"];
  Node16 -> Node2 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="windowSizeOption",arrowtail="open",fontname="Helvetica"];
  Node25 -> Node2 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="outlierNotifier",arrowtail="open",fontname="Helvetica"];
  Node25 [label="{moa.clusterers.outliers.MyBaseOutlierDetector.OutlierNotifier\n||+ OnOutlier()\l+ OnInlier()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1clusterers_1_1outliers_1_1MyBaseOutlierDetector_1_1OutlierNotifier.html"];
  Node26 -> Node2 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="myProgressInfo",arrowtail="open",fontname="Helvetica"];
  Node26 [label="{moa.clusterers.outliers.MyBaseOutlierDetector.ProgressInfo\n||+ GetInterval()\l+ ShowProgress()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfacemoa_1_1clusterers_1_1outliers_1_1MyBaseOutlierDetector_1_1ProgressInfo.html"];
  Node22 -> Node2 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="random",arrowtail="open",fontname="Helvetica"];
  Node27 -> Node1 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="anyout",arrowtail="open",fontname="Helvetica"];
  Node27 [label="{moa.clusterers.outliers.AnyOut.AnyOutCore\n|+ trainingSetSizeOption\l+ oScoreKOption\l+ confKOption\l+ confidenceChoiceOption\l+ UseMeanScoreOption\l+ threshholdOption\l- aggregatedOScoreResult\l- lastOScoreResult\l- lastConfidenceResult\l- objectAsKernel\l- previousOScoreResultList\l- descendToNode\l- currentLevel\l- threshold\l- weightThreshold\l- oScoreK\l- confK\l|+ AnyOutCore()\l+ resetLearning()\l+ train()\l+ initObject()\l+ learnObject()\l+ removeObject()\l+ moreImprovementsPossible()\l+ improveObjectOnce()\l+ isOutlier()\l+ getOutlierScore()\l+ getConfidence()\l- getDensityOutlierScore()\l- useAggregatedOScoreResults()\l- calcC1()\l- calcC2()\l- calcC3()\l- updateConfidence()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1clusterers_1_1outliers_1_1AnyOut_1_1AnyOutCore.html"];
  Node28 -> Node27 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node28 [label="{moa.clusterers.clustree.ClusTree\n|+ horizonOption\l+ maxHeightOption\l# root\l# negLambda\l# maxHeight\l# breadthFirstStrat\l- numberDimensions\l- height\l- numRootSplits\l- weightThreshold\l- numberInsertions\l- timestamp\l- alsoUpdate\l- serialVersionUID\l- INSERTIONS_BETWEEN_CLEANUPS\l|+ resetLearningImpl()\l+ isRandomizable()\l+ getModelDescription()\l+ getVotesForInstance()\l+ implementsMicroClusterer()\l+ trainOnInstanceImpl()\l+ insert()\l+ getNumRootSplits()\l+ getHeight()\l+ getMicroClusteringResult()\l+ getClusteringResult()\l+ getClustering()\l# getDefaultHeight()\l# getModelMeasurementsImpl()\l- insertBreadthFirst()\l- existsOutdatedEntryOnPath()\l- updateToTop()\l- insertHereWithSplit()\l- insertHere()\l- findBestLeafNode()\l- collectLeafNodes()\l- insert()\l- mergeEntryWithoutSplit()\l- calculateBestMergeInNode()\l- hasMaximalSize()\l- split()\l- cleanUp()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1clusterers_1_1clustree_1_1ClusTree.html",tooltip="Citation: ClusTree: Philipp Kranen, Ira Assent, Corinna Baldauf, Thomas Seidl: The..."];
  Node3 -> Node28 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node16 -> Node28 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="maxHeightOption\nhorizonOption",arrowtail="open",fontname="Helvetica"];
  Node29 -> Node28 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="alsoUpdate",arrowtail="open",fontname="Helvetica"];
  Node29 [label="{moa.clusterers.clustree.Entry\n|+ data\l- buffer\l- child\l- parentEntry\l- node\l- timestamp\l- defaultTimestamp\l|+ Entry()\l+ Entry()\l+ getNode()\l+ setNode()\l+ calcDistance()\l+ add()\l+ getChild()\l+ getParentEntry()\l+ setParentEntry()\l+ setChild()\l+ getTimestamp()\l# Entry()\l# Entry()\l# Entry()\l# clear()\l# shallowClear()\l# calcDistance()\l# initializeEntry()\l# aggregateEntry()\l# aggregateCluster()\l# aggregateToBuffer()\l# mergeWith()\l# getBuffer()\l# getData()\l# emptyBuffer()\l# isEmpty()\l# overwriteOldEntry()\l# recalculateData()\l# isIrrelevant()\l# makeOlder()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1clusterers_1_1clustree_1_1Entry.html"];
  Node30 -> Node29 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="data\nbuffer",arrowtail="open",fontname="Helvetica"];
  Node30 [label="{moa.clusterers.clustree.ClusKernel\n|+ EPSILON\l+ MIN_VARIANCE\l- totalN\l|+ ClusKernel()\l+ add()\l+ calcDistance()\l+ getWeight()\l+ getCF()\l+ getCenter()\l+ getInclusionProbability()\l+ getRadius()\l+ getVarianceVector()\l# ClusKernel()\l# ClusKernel()\l# aggregate()\l# makeOlder()\l# isEmpty()\l# clear()\l# overwriteOldCluster()\l- getTotalN()\l- getDeviation()\l- calcNormalizedDistance()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1clusterers_1_1clustree_1_1ClusKernel.html",tooltip="Representation of an Entry in the tree."];
  Node31 -> Node30 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node31 [label="{moa.cluster.CFCluster\n|+ LS\l+ SS\l# radiusFactor\l# N\l- serialVersionUID\l|+ CFCluster()\l+ CFCluster()\l+ CFCluster()\l+ add()\l+ getCF()\l+ getCenter()\l+ getInclusionProbability()\l+ getRadius()\l+ getWeight()\l+ setN()\l+ getN()\l+ addVectors()\l# CFCluster()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1cluster_1_1CFCluster.html"];
  Node32 -> Node31 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node32 [label="{moa.cluster.SphereCluster\n|- center\l- radius\l- weight\l- serialVersionUID\l|+ SphereCluster()\l+ SphereCluster()\l+ SphereCluster()\l+ SphereCluster()\l+ SphereCluster()\l+ overlapRadiusDegree()\l+ combine()\l+ merge()\l+ getCenter()\l+ setCenter()\l+ getRadius()\l+ setRadius()\l+ getWeight()\l+ setWeight()\l+ getInclusionProbability()\l+ getCenterDistance()\l+ getCenterDistance()\l+ getHullDistance()\l+ overlapSave()\l+ getDistanceVector()\l+ getDistanceVector()\l+ sample()\l# getClusterSpecificInfo()\l- distance()\l- distanceVector()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1cluster_1_1SphereCluster.html",tooltip="A simple implementation of the Cluster interface representing spherical clusters..."];
  Node33 -> Node32 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node33 [label="{moa.cluster.Cluster\n|- id\l- gtLabel\l- measure_values\l- serialVersionUID\l|+ Cluster()\l+ getCenter()\l+ getWeight()\l+ getInclusionProbability()\l+ getDescription()\l+ setId()\l+ getId()\l+ isGroundTruth()\l+ setGroundTruth()\l+ getGroundTruth()\l+ sample()\l+ setMeasureValue()\l+ setMeasureValue()\l+ getMeasureValue()\l+ getInfo()\l# getClusterSpecificInfo()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1cluster_1_1Cluster.html"];
  Node5 -> Node33 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node34 -> Node33 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="measure_values",arrowtail="open",fontname="Helvetica"];
  Node34 [label="{HashMap\< String, String \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node29 -> Node29 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="parentEntry",arrowtail="open",fontname="Helvetica"];
  Node35 -> Node29 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="node\nchild",arrowtail="open",fontname="Helvetica"];
  Node35 [label="{moa.clusterers.clustree.Node\n|~ NUMBER_ENTRIES\l~ INSERTIONS_BETWEEN_CLEANUPS\l- entries\l- level\l|+ Node()\l+ Node()\l+ nearestEntry()\l+ addEntry()\l+ getEntries()\l# Node()\l# isLeaf()\l# nearestEntry()\l# numFreeEntries()\l# getIrrelevantEntry()\l# getRawLevel()\l# getLevel()\l# clear()\l# mergeEntries()\l# makeOlder()\l- getNextEmptyPosition()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1clusterers_1_1clustree_1_1Node.html"];
  Node29 -> Node35 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="entries",arrowtail="open",fontname="Helvetica"];
  Node35 -> Node28 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="root",arrowtail="open",fontname="Helvetica"];
  Node36 -> Node27 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="threshholdOption",arrowtail="open",fontname="Helvetica"];
  Node36 [label="{moa.options.FloatOption\n|# currentVal\l# defaultVal\l# minVal\l# maxVal\l- serialVersionUID\l|+ FloatOption()\l+ FloatOption()\l+ setValue()\l+ getValue()\l+ getMinValue()\l+ getMaxValue()\l+ getDefaultCLIString()\l+ getValueAsCLIString()\l+ setValueViaCLIString()\l+ getEditComponent()\l+ cliStringToDouble()\l+ doubleToCLIString()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1options_1_1FloatOption.html",tooltip="Float option."];
  Node17 -> Node36 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node37 -> Node27 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="currentLevel",arrowtail="open",fontname="Helvetica"];
  Node37 [label="{HashMap\< Integer, Integer \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node38 -> Node27 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="descendToNode",arrowtail="open",fontname="Helvetica"];
  Node38 [label="{HashMap\< Integer, Node \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node16 -> Node27 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="confidenceChoiceOption\noScoreKOption\nconfKOption\ntrainingSetSizeOption",arrowtail="open",fontname="Helvetica"];
  Node21 -> Node27 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="UseMeanScoreOption",arrowtail="open",fontname="Helvetica"];
  Node39 -> Node27 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="objectAsKernel",arrowtail="open",fontname="Helvetica"];
  Node39 [label="{HashMap\< Integer, ClusKernel \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node40 -> Node27 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="aggregatedOScoreResult\nlastConfidenceResult\nlastOScoreResult",arrowtail="open",fontname="Helvetica"];
  Node40 [label="{HashMap\< Integer, Double \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node41 -> Node27 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="previousOScoreResultList",arrowtail="open",fontname="Helvetica"];
  Node41 [label="{HashMap\< Integer, ArrayList\< Double \> \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node42 -> Node1 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="trainingSet",arrowtail="open",fontname="Helvetica"];
  Node42 [label="{moa.clusterers.outliers.AnyOut.util.DataSet\n|- nrOfDimensions\l- dataList\l|+ DataSet()\l+ DataSet()\l+ addObject()\l+ addObject()\l+ getObject()\l+ size()\l+ getNrOfDimensions()\l+ getNrOfClasses()\l+ getFeaturesAsArray()\l+ getDataObjectArray()\l+ getDataSetsPerClass()\l+ getVariances()\l+ iterator()\l+ toString()\l+ manipulateIds()\l+ clear()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1clusterers_1_1outliers_1_1AnyOut_1_1util_1_1DataSet.html",tooltip="A set of DataObjects."];
  Node43 -> Node42 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="dataList",arrowtail="open",fontname="Helvetica"];
  Node43 [label="{ArrayList\< DataObject \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node43 -> Node1 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="objects",arrowtail="open",fontname="Helvetica"];
}
