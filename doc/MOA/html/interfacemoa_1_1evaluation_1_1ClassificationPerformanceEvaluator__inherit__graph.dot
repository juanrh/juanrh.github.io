digraph G
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{moa.evaluation.ClassificationPerformanceEvaluator\n||+ reset()\l+ addResult()\l+ getPerformanceMeasurements()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node2 [label="{moa.MOAObject\n||+ measureByteSize()\l+ copy()\l+ getDescription()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfacemoa_1_1MOAObject.html",tooltip="Interface implemented by classes in MOA, so that all are serializable, can produce..."];
  Node3 -> Node2 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node3 [label="{Serializable\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node1 -> Node4 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node4 [label="{moa.evaluation.BasicClassificationPerformanceEvaluator\n|# weightObserved\l# weightCorrect\l# columnKappa\l# rowKappa\l# numClasses\l- weightCorrectNoChangeClassifier\l- lastSeenClass\l- serialVersionUID\l|+ reset()\l+ reset()\l+ addResult()\l+ getPerformanceMeasurements()\l+ getTotalWeightObserved()\l+ getFractionCorrectlyClassified()\l+ getFractionIncorrectlyClassified()\l+ getKappaStatistic()\l+ getKappaTemporalStatistic()\l+ getDescription()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1evaluation_1_1BasicClassificationPerformanceEvaluator.html",tooltip="Classification evaluator that performs basic incremental evaluation."];
  Node1 -> Node5 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node5 [label="{moa.evaluation.BasicConceptDriftPerformanceEvaluator\n|# weightObserved\l# numberDetections\l# numberDetectionsOccurred\l# numberChanges\l# numberWarnings\l# delay\l# errorPrediction\l# totalDelay\l# isWarningZone\l# inputValues\l- hasChangeOccurred\l- serialVersionUID\l|+ reset()\l+ addResult()\l+ getPerformanceMeasurements()\l+ getTotalWeightObserved()\l+ getNumberDetections()\l+ getInputValues()\l+ getPredictionError()\l+ getNumberChanges()\l+ getNumberChangesOccurred()\l+ getNumberWarnings()\l+ getTotalDelay()\l+ getDescription()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1evaluation_1_1BasicConceptDriftPerformanceEvaluator.html"];
  Node1 -> Node6 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node6 [label="{moa.evaluation.EWMAClassificationPerformanceEvaluator\n|+ alphaOption\l# TotalweightObserved\l# weightCorrect\l- serialVersionUID\l|+ reset()\l+ addResult()\l+ getPerformanceMeasurements()\l+ getTotalWeightObserved()\l+ getFractionCorrectlyClassified()\l+ getFractionIncorrectlyClassified()\l+ getDescription()\l+ prepareForUseImpl()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1evaluation_1_1EWMAClassificationPerformanceEvaluator.html",tooltip="Classification evaluator that updates evaluation results using an Exponential Weighted..."];
  Node1 -> Node7 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node7 [label="{moa.evaluation.FadingFactorClassificationPerformanceEvaluator\n|+ alphaOption\l# TotalweightObserved\l# weightCorrect\l- serialVersionUID\l|+ reset()\l+ addResult()\l+ getPerformanceMeasurements()\l+ getTotalWeightObserved()\l+ getFractionCorrectlyClassified()\l+ getFractionIncorrectlyClassified()\l+ getDescription()\l+ prepareForUseImpl()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1evaluation_1_1FadingFactorClassificationPerformanceEvaluator.html",tooltip="Classification evaluator that updates evaluation results using a fading factor."];
  Node1 -> Node8 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node8 [label="{moa.evaluation.RegressionPerformanceEvaluator\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfacemoa_1_1evaluation_1_1RegressionPerformanceEvaluator.html",tooltip="Interface implemented by learner evaluators to monitor the results of the regression..."];
  Node8 -> Node9 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node9 [label="{moa.evaluation.BasicRegressionPerformanceEvaluator\n|# weightObserved\l# squareError\l# averageError\l# sumTarget\l# squareTargetError\l# averageTargetError\l- serialVersionUID\l|+ reset()\l+ addResult()\l+ getPerformanceMeasurements()\l+ getTotalWeightObserved()\l+ getMeanError()\l+ getSquareError()\l+ getTargetMeanError()\l+ getTargetSquareError()\l+ getDescription()\l- getRelativeMeanError()\l- getRelativeSquareError()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1evaluation_1_1BasicRegressionPerformanceEvaluator.html",tooltip="Regression evaluator that performs basic incremental evaluation."];
  Node8 -> Node10 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node10 [label="{moa.evaluation.WindowRegressionPerformanceEvaluator\n|+ widthOption\l# TotalweightObserved\l# weightObserved\l# squareError\l# averageError\l# numClasses\l- serialVersionUID\l|+ reset()\l+ reset()\l+ addResult()\l+ getPerformanceMeasurements()\l+ getTotalWeightObserved()\l+ getMeanError()\l+ getSquareError()\l+ getDescription()\l+ prepareForUseImpl()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1evaluation_1_1WindowRegressionPerformanceEvaluator.html",tooltip="Regression evaluator that updates evaluation results using a sliding window."];
  Node1 -> Node11 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node11 [label="{moa.evaluation.WindowClassificationPerformanceEvaluator\n|+ widthOption\l# TotalweightObserved\l# weightObserved\l# weightCorrect\l# weightCorrectNoChangeClassifier\l# lastSeenClass\l# columnKappa\l# rowKappa\l# classAccuracy\l# numClasses\l- serialVersionUID\l|+ reset()\l+ reset()\l+ addResult()\l+ getPerformanceMeasurements()\l+ getTotalWeightObserved()\l+ getFractionCorrectlyClassified()\l+ getKappaStatistic()\l+ getKappaTemporalStatistic()\l+ getFractionIncorrectlyClassified()\l+ getDescription()\l+ prepareForUseImpl()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1evaluation_1_1WindowClassificationPerformanceEvaluator.html",tooltip="Classification evaluator that updates evaluation results using a sliding window."];
  Node11 -> Node12 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node12 [label="{moa.evaluation.MultilabelWindowClassificationPerformanceEvaluator\n|~ result_pred\l~ result_real\l- LC\l|+ reset()\l+ reset()\l+ addResult()\l+ getPerformanceMeasurements()\l+ getDescription()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1evaluation_1_1MultilabelWindowClassificationPerformanceEvaluator.html",tooltip="Multilabel Window Classification Performance Evaluator."];
}
