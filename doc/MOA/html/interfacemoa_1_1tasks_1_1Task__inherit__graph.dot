digraph G
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{moa.tasks.Task\n||+ getTaskResultType()\l+ doTask()\l+ doTask()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node2 [label="{moa.MOAObject\n||+ measureByteSize()\l+ copy()\l+ getDescription()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfacemoa_1_1MOAObject.html",tooltip="Interface implemented by classes in MOA, so that all are serializable, can produce..."];
  Node3 -> Node2 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node3 [label="{Serializable\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node1 -> Node4 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node4 [label="{moa.tasks.AbstractTask\n||+ getTaskName()\l+ doTask()\l+ doTask()\l+ getDescription()\l# doTaskImpl()\l# prepareForUseImpl()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1tasks_1_1AbstractTask.html",tooltip="Abstract Task."];
  Node4 -> Node5 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node5 [label="{moa.tasks.CacheShuffledStream\n|+ streamOption\l+ maximumCacheSizeOption\l+ shuffleRandomSeedOption\l- serialVersionUID\l|+ getPurposeString()\l+ getTaskResultType()\l# doTaskImpl()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1tasks_1_1CacheShuffledStream.html",tooltip="Task for storing and shuffling examples in memory."];
  Node4 -> Node6 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node6 [label="{moa.tasks.MainTask\n|+ outputFileOption\l# INSTANCES_BETWEEN_MONITOR_UPDATES\l- serialVersionUID\l|# doTaskImpl()\l# doMainTask()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1tasks_1_1MainTask.html",tooltip="Abstract Main Task."];
  Node6 -> Node7 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node7 [label="{moa.tasks.ConceptDriftMainTask\n|# events\l|+ getEventsList()\l# setEventsList()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1tasks_1_1ConceptDriftMainTask.html"];
  Node7 -> Node8 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node8 [label="{moa.tasks.EvaluateConceptDrift\n|+ learnerOption\l+ streamOption\l+ evaluatorOption\l+ instanceLimitOption\l+ timeLimitOption\l+ sampleFrequencyOption\l+ dumpFileOption\l- serialVersionUID\l|+ getPurposeString()\l+ getTaskResultType()\l# doMainTask()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1tasks_1_1EvaluateConceptDrift.html",tooltip="Task for evaluating a classifier on a stream by testing then training with each example..."];
  Node7 -> Node9 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node9 [label="{moa.tasks.RunStreamTasks\n|+ taskOption\l+ streamParameterOption\l+ firstValueOption\l+ lastValueOption\l+ incrementValueOption\l# task\l- serialVersionUID\l|+ getPurposeString()\l+ getTaskResultType()\l# doMainTask()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1tasks_1_1RunStreamTasks.html",tooltip="Task for running several experiments modifying values of parameters."];
  Node6 -> Node10 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node10 [label="{moa.tasks.EvaluateClustering\n|+ learnerOption\l+ streamOption\l+ instanceLimitOption\l+ measureCollectionTypeOption\l+ dumpFileOption\l- serialVersionUID\l|+ getPurposeString()\l+ getTaskResultType()\l# doMainTask()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1tasks_1_1EvaluateClustering.html",tooltip="Task for evaluating a clusterer on a stream."];
  Node6 -> Node11 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node11 [label="{moa.tasks.EvaluateInterleavedChunks\n|+ learnerOption\l+ streamOption\l+ evaluatorOption\l+ instanceLimitOption\l+ chunkSizeOption\l+ timeLimitOption\l+ sampleFrequencyOption\l+ maxMemoryOption\l+ memCheckFrequencyOption\l+ dumpFileOption\l- serialVersionUID\l|+ getPurposeString()\l+ getTaskResultType()\l# doMainTask()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1tasks_1_1EvaluateInterleavedChunks.html"];
  Node6 -> Node12 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node12 [label="{moa.tasks.EvaluateInterleavedTestThenTrain\n|+ learnerOption\l+ streamOption\l+ randomSeedOption\l+ evaluatorOption\l+ instanceLimitOption\l+ timeLimitOption\l+ sampleFrequencyOption\l+ memCheckFrequencyOption\l+ dumpFileOption\l- serialVersionUID\l|+ getPurposeString()\l+ getTaskResultType()\l# doMainTask()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1tasks_1_1EvaluateInterleavedTestThenTrain.html",tooltip="Task for evaluating a classifier on a stream by testing then training with each example..."];
  Node6 -> Node13 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node13 [label="{moa.tasks.EvaluateModel\n|+ modelOption\l+ streamOption\l+ evaluatorOption\l+ maxInstancesOption\l+ outputPredictionFileOption\l- serialVersionUID\l|+ getPurposeString()\l+ EvaluateModel()\l+ EvaluateModel()\l+ getTaskResultType()\l+ doMainTask()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1tasks_1_1EvaluateModel.html",tooltip="Task for evaluating a static model on a stream."];
  Node6 -> Node14 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node14 [label="{moa.tasks.EvaluateOnlineRecommender\n|+ datasetOption\l+ ratingPredictorOption\l+ sampleFrequencyOption\l- serialVersionUID\l|+ getPurposeString()\l+ EvaluateOnlineRecommender()\l+ getTaskResultType()\l+ doMainTask()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1tasks_1_1EvaluateOnlineRecommender.html",tooltip="Test for evaluating a recommender by training and periodically testing on samples..."];
  Node6 -> Node15 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node15 [label="{moa.tasks.EvaluatePeriodicHeldOutTest\n|+ learnerOption\l+ streamOption\l+ evaluatorOption\l+ testSizeOption\l+ trainSizeOption\l+ trainTimeOption\l+ sampleFrequencyOption\l+ dumpFileOption\l+ cacheTestOption\l- serialVersionUID\l|+ getPurposeString()\l+ getTaskResultType()\l# doMainTask()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1tasks_1_1EvaluatePeriodicHeldOutTest.html",tooltip="Task for evaluating a classifier on a stream by periodically testing on a heldout..."];
  Node6 -> Node16 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node16 [label="{moa.tasks.EvaluatePrequential\n|+ learnerOption\l+ streamOption\l+ evaluatorOption\l+ instanceLimitOption\l+ timeLimitOption\l+ sampleFrequencyOption\l+ memCheckFrequencyOption\l+ dumpFileOption\l+ outputPredictionFileOption\l+ widthOption\l+ alphaOption\l- serialVersionUID\l|+ getPurposeString()\l+ getTaskResultType()\l# doMainTask()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1tasks_1_1EvaluatePrequential.html",tooltip="Task for evaluating a classifier on a stream by testing then training with each example..."];
  Node6 -> Node17 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node17 [label="{moa.tasks.LearnModel\n|+ learnerOption\l+ streamOption\l+ maxInstancesOption\l+ numPassesOption\l+ memCheckFrequencyOption\l- serialVersionUID\l|+ getPurposeString()\l+ LearnModel()\l+ LearnModel()\l+ getTaskResultType()\l+ doMainTask()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1tasks_1_1LearnModel.html",tooltip="Task for learning a model without any evaluation."];
  Node6 -> Node18 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node18 [label="{moa.tasks.MeasureStreamSpeed\n|+ streamOption\l+ generateSizeOption\l- serialVersionUID\l|+ getPurposeString()\l+ getTaskResultType()\l# doMainTask()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1tasks_1_1MeasureStreamSpeed.html",tooltip="Task for measuring the speed of the stream."];
  Node6 -> Node19 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node19 [label="{moa.tasks.Plot\n|+ gnuplotPathOption\l+ plotOutputOption\l+ inputFilesOption\l+ fileAliasesOption\l+ outputTypeOption\l+ plotStyleOption\l+ xColumnOption\l+ xTitleOption\l+ xUnitOption\l+ yColumnOption\l+ yTitleOption\l+ yUnitOption\l+ lineWidthOption\l+ pointIntervalOption\l+ smoothOption\l+ deleteScriptsOption\l+ legendLocationOption\l+ legendTypeOption\l+ additionalSetOption\l+ additionalPlotOption\l- serialVersionUID\l|+ getPurposeString()\l+ getTaskResultType()\l# doMainTask()\l- writeScriptToFile()\l- createScript()\l- getAxisUnit()\l- terminalOptions()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1tasks_1_1Plot.html",tooltip="A task allowing to create and plot gnuplot scripts."];
  Node6 -> Node20 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node20 [label="{moa.tasks.RegressionMainTask\n|# events\l|+ getEventsList()\l# setEventsList()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1tasks_1_1RegressionMainTask.html"];
  Node20 -> Node21 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node21 [label="{moa.tasks.EvaluateModelRegression\n|+ modelOption\l+ streamOption\l+ evaluatorOption\l+ maxInstancesOption\l+ outputPredictionFileOption\l- serialVersionUID\l|+ getPurposeString()\l+ EvaluateModelRegression()\l+ EvaluateModelRegression()\l+ getTaskResultType()\l+ doMainTask()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1tasks_1_1EvaluateModelRegression.html",tooltip="Task for evaluating a static model on a stream."];
  Node20 -> Node22 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node22 [label="{moa.tasks.EvaluatePrequentialRegression\n|+ learnerOption\l+ streamOption\l+ evaluatorOption\l+ instanceLimitOption\l+ timeLimitOption\l+ sampleFrequencyOption\l+ memCheckFrequencyOption\l+ dumpFileOption\l+ outputPredictionFileOption\l+ widthOption\l+ alphaOption\l- serialVersionUID\l|+ getPurposeString()\l+ getTaskResultType()\l# doMainTask()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1tasks_1_1EvaluatePrequentialRegression.html",tooltip="Task for evaluating a classifier on a stream by testing then training with each example..."];
  Node20 -> Node23 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node23 [label="{moa.tasks.LearnModelRegression\n|+ learnerOption\l+ streamOption\l+ maxInstancesOption\l+ numPassesOption\l+ memCheckFrequencyOption\l- serialVersionUID\l|+ getPurposeString()\l+ LearnModelRegression()\l+ LearnModelRegression()\l+ getTaskResultType()\l+ doMainTask()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1tasks_1_1LearnModelRegression.html",tooltip="Task for learning a model without any evaluation."];
  Node6 -> Node24 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node24 [label="{moa.tasks.RunTasks\n|+ taskOption\l+ classifierParameterOption\l+ firstValueOption\l+ lastValueOption\l+ incrementValueOption\l# task\l- serialVersionUID\l|+ getPurposeString()\l+ getTaskResultType()\l# doMainTask()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1tasks_1_1RunTasks.html",tooltip="Task for running several experiments modifying values of parameters."];
  Node6 -> Node25 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node25 [label="{moa.tasks.WriteStreamToARFFFile\n|+ streamOption\l+ arffFileOption\l+ maxInstancesOption\l+ suppressHeaderOption\l- serialVersionUID\l|+ getPurposeString()\l+ getTaskResultType()\l# doMainTask()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1tasks_1_1WriteStreamToARFFFile.html",tooltip="Task to output a stream to an ARFF file."];
}
