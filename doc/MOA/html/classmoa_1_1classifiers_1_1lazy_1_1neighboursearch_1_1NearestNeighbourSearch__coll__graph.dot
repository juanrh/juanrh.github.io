digraph G
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{moa.classifiers.lazy.neighboursearch.NearestNeighbourSearch\n|# m_Instances\l# m_kNN\l# m_DistanceFunction\l# m_MeasurePerformance\l|+ NearestNeighbourSearch()\l+ NearestNeighbourSearch()\l+ globalInfo()\l+ distanceFunctionTipText()\l+ getDistanceFunction()\l+ setDistanceFunction()\l+ measurePerformanceTipText()\l+ getMeasurePerformance()\l+ nearestNeighbour()\l+ kNearestNeighbours()\l+ getDistances()\l+ update()\l+ addInstanceInfo()\l+ setInstances()\l+ getInstances()\l+ combSort11()\l+ quickSort()\l# partition()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node2 [label="{Serializable\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node3 -> Node1 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="m_DistanceFunction",arrowtail="open",fontname="Helvetica"];
  Node3 [label="{moa.classifiers.lazy.neighboursearch.DistanceFunction\n||+ setInstances()\l+ getInstances()\l+ setAttributeIndices()\l+ getAttributeIndices()\l+ setInvertSelection()\l+ getInvertSelection()\l+ distance()\l+ distance()\l+ postProcessDistances()\l+ update()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfacemoa_1_1classifiers_1_1lazy_1_1neighboursearch_1_1DistanceFunction.html",tooltip="Interface for any class that can compute and return distances between two instances..."];
  Node4 -> Node1 [dir=back,color="darkorchid3",fontsize="10",style="dashed",label="m_Instances",arrowtail="open",fontname="Helvetica"];
  Node4 [label="{Instances\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
}
