digraph G
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{moa.streams.clustering.ClusteringStream\n|+ decayHorizonOption\l+ decayThresholdOption\l+ evaluationFrequencyOption\l+ numAttsOption\l|+ getDecayHorizon()\l+ getDecayThreshold()\l+ getEvaluationFrequency()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node2 [label="{moa.options.AbstractOptionHandler\n|# options\l# classOptionNamesToPreparedObjects\l- serialVersionUID\l|+ getPurposeString()\l+ getOptions()\l+ prepareForUse()\l+ prepareForUse()\l+ getCLICreationString()\l+ copy()\l# prepareForUseImpl()\l# discoverOptionsViaReflection()\l# prepareClassOptions()\l# getPreparedClassOption()\l# getPreparedClassOption()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1options_1_1AbstractOptionHandler.html",tooltip="Abstract Option Handler."];
  Node3 -> Node2 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node3 [label="{moa.AbstractMOAObject\n||+ copy()\l+ measureByteSize()\l+ toString()\l+ copy()\l+ measureByteSize()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1AbstractMOAObject.html",tooltip="Abstract MOA Object."];
  Node4 -> Node3 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node4 [label="{moa.MOAObject\n||+ measureByteSize()\l+ copy()\l+ getDescription()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfacemoa_1_1MOAObject.html",tooltip="Interface implemented by classes in MOA, so that all are serializable, can produce..."];
  Node5 -> Node4 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node5 [label="{Serializable\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node6 -> Node2 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node6 [label="{moa.options.OptionHandler\n||+ getPurposeString()\l+ getOptions()\l+ prepareForUse()\l+ prepareForUse()\l+ copy()\l+ getCLICreationString()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfacemoa_1_1options_1_1OptionHandler.html",tooltip="Interface representing an object that handles options or parameters."];
  Node4 -> Node6 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node7 -> Node1 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node7 [label="{moa.streams.InstanceStream\n||+ getHeader()\l+ estimatedRemainingInstances()\l+ hasMoreInstances()\l+ nextInstance()\l+ isRestartable()\l+ restart()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfacemoa_1_1streams_1_1InstanceStream.html",tooltip="Interface representing a data stream of instances."];
  Node4 -> Node7 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node1 -> Node8 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node8 [label="{moa.streams.clustering.FileStream\n|+ arffFileOption\l+ classIndexOption\l+ normalizeOption\l+ removeAttributesOption\l+ keepNonNumericalAttrOption\l~ defaultfile\l# instances\l# fileReader\l# hitEndOfFile\l# lastInstanceRead\l# numInstancesRead\l# fileProgressMonitor\l- removeAttributes\l- filteredDataset\l- valuesMinMaxDiff\l- serialVersionUID\l|+ getPurposeString()\l+ FileStream()\l+ prepareForUseImpl()\l+ getHeader()\l+ estimatedRemainingInstances()\l+ hasMoreInstances()\l+ nextInstance()\l+ isRestartable()\l+ restart()\l+ getDescription()\l# readNextInstanceFromFile()\l# readMinMaxDiffValues()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1streams_1_1clustering_1_1FileStream.html"];
  Node1 -> Node9 [dir=back,color="midnightblue",fontsize="10",style="solid",arrowtail="empty",fontname="Helvetica"];
  Node9 [label="{moa.streams.clustering.RandomRBFGeneratorEvents\n|+ modelRandomSeedOption\l+ instanceRandomSeedOption\l+ numClusterOption\l+ numClusterRangeOption\l+ kernelRadiiOption\l+ kernelRadiiRangeOption\l+ densityRangeOption\l+ speedOption\l+ speedRangeOption\l+ noiseLevelOption\l+ noiseInClusterOption\l+ eventFrequencyOption\l+ eventMergeSplitOption\l+ eventDeleteCreateOption\l# instanceRandom\l# streamHeader\l- listeners\l- merge_threshold\l- kernelMovePointFrequency\l- maxDistanceMoveThresholdByStep\l- maxOverlapFitRuns\l- eventFrequencyRange\l- debug\l- kernels\l- numGeneratedInstances\l- numActiveKernels\l- nextEventCounter\l- nextEventChoice\l- clusterIdCounter\l- mergeClusterA\l- mergeClusterB\l- mergeKernelsOverlapping\l- serialVersionUID\l|+ RandomRBFGeneratorEvents()\l+ getHeader()\l+ estimatedRemainingInstances()\l+ hasMoreInstances()\l+ isRestartable()\l+ prepareForUseImpl()\l+ restart()\l+ nextInstance()\l+ getGeneratingClusters()\l+ getMicroClustering()\l+ getDescription()\l+ addClusterChangeListener()\l+ removeClusterChangeListener()\l+ getPurposeString()\l+ getParameterString()\l# generateHeader()\l# initKernels()\l# fireClusterChange()\l- eventScheduler()\l- getNextEvent()\l- fadeOut()\l- fadeIn()\l- changeWeight()\l- changeRadius()\l- splitKernel()\l- mergeKernels()\l- getNoisePoint()\l- chooseWeightedElement()\l- normalizeWeights()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classmoa_1_1streams_1_1clustering_1_1RandomRBFGeneratorEvents.html"];
}
